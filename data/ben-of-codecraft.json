{
  "user": {
    "id": "U_kgDOBpkScw",
    "login": "ben-of-codecraft",
    "name": "Ben Carter",
    "avatarUrl": "https://avatars.githubusercontent.com/u/110695027?u=eb17c41caa69e03f75bb00eee4a11dabb6e3ef55&v=4",
    "bio": "XVP, Principal Architect.  I enjoy long walks through clean code.\r\n \r\n\"I humbly promote my 12 years old's artwork as my profile pic monthly\"",
    "company": "RVO Health",
    "location": "Gordonsville, VA",
    "email": "",
    "twitterUsername": null,
    "websiteUrl": null,
    "status": null,
    "createdAt": "2022-08-05T19:45:08Z",
    "followers": {
      "totalCount": 0
    },
    "following": {
      "totalCount": 0
    },
    "anyPinnableItems": true,
    "pinnedItems": {
      "totalCount": 0,
      "nodes": []
    },
    "sponsoring": {
      "totalCount": 0
    },
    "sponsors": {
      "totalCount": 0
    },
    "starredRepositories": {
      "totalCount": 2
    },
    "publicKeys": {
      "totalCount": 5,
      "nodes": [
        {
          "key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCrl/u1bq8eayIYQyUp+4YwNe7VD1io6Qyver59kIUAHr6D9dFahIfns0+tWEcAfbIrGNS7qDJ/o4Q7habygzgm5IdNql2rUI9pviSP+w1dGkEPCBtWZkIL0JGHjt4p8ULNmOXQrRg7ISHWgSUr/yhYUl0/OF1OLkohrmoPyMsbPZQPftHmb9hq8il3U1PwrglvWx62HrJbdKguNWEtTZ6n6bheLmrFy4a2vEuRv+5ac2rOpP1Sg2MQx8XTzTdArt6VT1DCTd/WP7B/A8+ZPgkZSX8+H3c6tYOI0zTw0U+lXsSZmfV3+pyb5TmgcnLJTzBeGFyOWxhDb6yKDwINDxoDsEoBAPKG5LdkZoklondEzu/WU/DdMbdOI0K9ho5tK7YdFRccgmflm9s4lgUWk9iCoZJtTaku5PBlfW/xqwoOcSwGyPPZ5T08722JW4mppFmNniLXWJVSJcyoxwWdUtmrgLJlU12A07xn4TERUOyph4f9ENQM16aoUMbj6dhCmGk="
        },
        {
          "key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC/t+Sq94WFFPciT2B183A1RZlWg78A5MpX3CRrFJu+oEmXCNpVeWn9jrfbtC+COa3bPcIX79x7kX3JEat6Ijwx69VBrcYNSGCx28F0+gefE4ZkO2NTG7brojvI2W42BeIGL0maoKb1Rwd1EfOPuVI3sMxMGS3RI4Ydkwd5BTInGk8GYB4OowBcuYDiJs0Sp9EUUdl5VEQBNQvy7mdX8jOoWCr/dykiuau429XvImCEQk32kJ4D9czkd6HrHYd6RQs/jxybubhZzVQRyx8KpdR+ta933qApYBCxMOlrjNspRvc80p/tQjU7kwTKW8oRtq5bYNCSy+NCHvXiZpdaCjXnC8CGNT6g4vsPF/IsYiTkFtmd7FGW8IOYPQctKMCkoGPlMWNZeDIezrl3s0sLNDEERxCg8nVU3UXglif1gfZ1DiGlcqi++JjSWHvAWP6oCzSBuz4aheOXd/fcy35hnY2yDXtutZiSZgODFfs8jaPm7eUA/SpHXBee9QdiDsPxx2k="
        },
        {
          "key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDImlz27yBTzTc131ChfrNDAwCJ2OAXwsggO/lHWeB8xfYsFXd3x99hCVQU1q/12R8UFfh1XH0LBHl+T6x7X9TjRQ4YO4oJ5zmKanM3WGabxxERQFwpcZACpNrGQNQ2kkBdPxgEg9/xq0kNyGVgl7uUK3BzvCx/T7P0BPv11kcNWC2Eu/60kXu5TvQuKmrHsbLJJNwjeKZNMGCxwh82Vq0NcSmv0bsO0azq6E4XTG9PZAl9E8NRfn5t0aqM6p9MPtut1osUf7iX40SRWdAbtS6upanbkOA4zYa0hM0Lij0n8uzvz3sTuHQWvTCZn3HCnBWBGNKXHUiBVSvi/fyLXikTt6bvgdy1tz5BQyFOCEHHtAiABTCHATwvEtTkgktHZcH6LcIygUhaztG3x8nUVcUi9inwwEJVh/9a9hsThQg3FChNXCQvojtz/Yps4r60qbo53N5pwjzwd/TTGu7LeilvLVdLB/PXAz1blaXduQyO3mvBlg1GOfbl5pvvr1nmq/6WViVHqQ+AdKr+QRK5nkgO2HBp+QneWDcCgacj8szViqjmY6h95XhPYe4Rc33pTdEgocjQARGGIGEfW5woE1SiwkYAAx6UO9bNwvt6mxFsU3S4DvDaAkTJ56IU2gZf9+xxIsJGIDlOqT3sFPhHYutyAS+nGO9B2nVMhm9qV6hM7Q=="
        },
        {
          "key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC0au3kfqSUulJjbHa1eFOaRRFbABj59dkt9jeji1gILGzgO8TMldN072w5Ekk++4ATCCDUJVaceB1H7rY4zzht9DL10XJvo8i4fvvv7vT/5YuE7ClFIcvqbs99EB2yKdMUlielvfd8ysfnPpoR5WovibGLPq1OL/szvq2W1FlrEy/Y4mHM6BV5TMYMhHYElsdWGugv+kRtTmIQSvJo+BTTmTygBL8f2TC3FeRQjCdXdziR8A8mH+8166zN+Cae256QJ3ejAhJTAsDmE5OURzMCLsBKVl5EQuGgfnDx7FczOzI7Fw5Up/kjvSSJev0kvoVFF7qXtYYw0Z00hGjZEedfvoL68WDziMibPZffsGTDkzFTMnakdkgyYHwMx19AgPLNsRyuLgSXePdhRxMD5VSdd7nIe0g8l47vLnw4mrmEY8xf7yEyzTKKgDpDYwp5gu9pdMFtu215vHSNYiFDK/zLWvxQjRM9tw/OvOdYjX+3clHaG2UqvzqU5YZux1zcfj0="
        },
        {
          "key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQCRZC87VzinDKOMwGYGDltS3tX+NSLpvEPqCwWQUSaYipp6I8EZAsbwdOflSxsrzlfUZvox2ttahHhXA9xBkNUCFdATNSJxYBz+gaubH8A4RPsIbguhYsl+tqXHQ3cFtNSwty8L22a7QDA3AhamEXCktzJS6Pv5e1X9rNWUkwZIEyXF6yp/pnG7CLgqaXcwPkpjOgkAjsLkbXn7DuS2svKZ3XPfcW21jC1XIOAyS1bJIB6wu5JQrad5CHLjbx9jGrJn19HBNyT2ukDGdyQZJ8VFl6enek5e6iQO1hLAZGQSwKoG9CN6rIJpUboK0RaqKEJMB3GkaAv77mTvwQWNzEf1Yy3+6Zm3vVuR7trXro5uZ0HAJHU2ZtdX+RduFp0RWUuPKzQtJ06gDVwuaHZAUTCPP4xz1wnPhGHlAzxP52Uf4TIpvTkr7xM46no8E4SPHIShjiHQWOh5/p4GeU2VCPwgckbyvbEUyhYjRlWORNWnyux0XPH6GZomQBbA2EhkH8BG7vqaKUsoXIv9K0xzHeIflJ/XqqMBD3kggCRQ7ZG+YqN1eCT5vBu24kFaRZ2wFojay3gh2s6O3Y5BAjxjfqnZEDSY61f4o7kEeWf32qIIGmbjqQhQAT9pVljkcb44JfN87UaS1HYTiRTNMYRG9X+2LLtYQ/AyHt16lpphpzZY8Q=="
        }
      ]
    }
  },
  "repos": [
    {
      "id": 675783349,
      "node_id": "R_kgDOKEeitQ",
      "name": "azerothcore-wotlk",
      "full_name": "ben-of-codecraft/azerothcore-wotlk",
      "private": false,
      "owner": {
        "login": "ben-of-codecraft",
        "id": 110695027,
        "node_id": "U_kgDOBpkScw",
        "avatar_url": "https://avatars.githubusercontent.com/u/110695027?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ben-of-codecraft",
        "html_url": "https://github.com/ben-of-codecraft",
        "followers_url": "https://api.github.com/users/ben-of-codecraft/followers",
        "following_url": "https://api.github.com/users/ben-of-codecraft/following{/other_user}",
        "gists_url": "https://api.github.com/users/ben-of-codecraft/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/ben-of-codecraft/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ben-of-codecraft/subscriptions",
        "organizations_url": "https://api.github.com/users/ben-of-codecraft/orgs",
        "repos_url": "https://api.github.com/users/ben-of-codecraft/repos",
        "events_url": "https://api.github.com/users/ben-of-codecraft/events{/privacy}",
        "received_events_url": "https://api.github.com/users/ben-of-codecraft/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/ben-of-codecraft/azerothcore-wotlk",
      "description": "Complete Open Source and Modular solution for MMO",
      "fork": true,
      "url": "https://api.github.com/repos/ben-of-codecraft/azerothcore-wotlk",
      "forks_url": "https://api.github.com/repos/ben-of-codecraft/azerothcore-wotlk/forks",
      "keys_url": "https://api.github.com/repos/ben-of-codecraft/azerothcore-wotlk/keys{/key_id}",
      "collaborators_url": "https://api.github.com/repos/ben-of-codecraft/azerothcore-wotlk/collaborators{/collaborator}",
      "teams_url": "https://api.github.com/repos/ben-of-codecraft/azerothcore-wotlk/teams",
      "hooks_url": "https://api.github.com/repos/ben-of-codecraft/azerothcore-wotlk/hooks",
      "issue_events_url": "https://api.github.com/repos/ben-of-codecraft/azerothcore-wotlk/issues/events{/number}",
      "events_url": "https://api.github.com/repos/ben-of-codecraft/azerothcore-wotlk/events",
      "assignees_url": "https://api.github.com/repos/ben-of-codecraft/azerothcore-wotlk/assignees{/user}",
      "branches_url": "https://api.github.com/repos/ben-of-codecraft/azerothcore-wotlk/branches{/branch}",
      "tags_url": "https://api.github.com/repos/ben-of-codecraft/azerothcore-wotlk/tags",
      "blobs_url": "https://api.github.com/repos/ben-of-codecraft/azerothcore-wotlk/git/blobs{/sha}",
      "git_tags_url": "https://api.github.com/repos/ben-of-codecraft/azerothcore-wotlk/git/tags{/sha}",
      "git_refs_url": "https://api.github.com/repos/ben-of-codecraft/azerothcore-wotlk/git/refs{/sha}",
      "trees_url": "https://api.github.com/repos/ben-of-codecraft/azerothcore-wotlk/git/trees{/sha}",
      "statuses_url": "https://api.github.com/repos/ben-of-codecraft/azerothcore-wotlk/statuses/{sha}",
      "languages_url": "https://api.github.com/repos/ben-of-codecraft/azerothcore-wotlk/languages",
      "stargazers_url": "https://api.github.com/repos/ben-of-codecraft/azerothcore-wotlk/stargazers",
      "contributors_url": "https://api.github.com/repos/ben-of-codecraft/azerothcore-wotlk/contributors",
      "subscribers_url": "https://api.github.com/repos/ben-of-codecraft/azerothcore-wotlk/subscribers",
      "subscription_url": "https://api.github.com/repos/ben-of-codecraft/azerothcore-wotlk/subscription",
      "commits_url": "https://api.github.com/repos/ben-of-codecraft/azerothcore-wotlk/commits{/sha}",
      "git_commits_url": "https://api.github.com/repos/ben-of-codecraft/azerothcore-wotlk/git/commits{/sha}",
      "comments_url": "https://api.github.com/repos/ben-of-codecraft/azerothcore-wotlk/comments{/number}",
      "issue_comment_url": "https://api.github.com/repos/ben-of-codecraft/azerothcore-wotlk/issues/comments{/number}",
      "contents_url": "https://api.github.com/repos/ben-of-codecraft/azerothcore-wotlk/contents/{+path}",
      "compare_url": "https://api.github.com/repos/ben-of-codecraft/azerothcore-wotlk/compare/{base}...{head}",
      "merges_url": "https://api.github.com/repos/ben-of-codecraft/azerothcore-wotlk/merges",
      "archive_url": "https://api.github.com/repos/ben-of-codecraft/azerothcore-wotlk/{archive_format}{/ref}",
      "downloads_url": "https://api.github.com/repos/ben-of-codecraft/azerothcore-wotlk/downloads",
      "issues_url": "https://api.github.com/repos/ben-of-codecraft/azerothcore-wotlk/issues{/number}",
      "pulls_url": "https://api.github.com/repos/ben-of-codecraft/azerothcore-wotlk/pulls{/number}",
      "milestones_url": "https://api.github.com/repos/ben-of-codecraft/azerothcore-wotlk/milestones{/number}",
      "notifications_url": "https://api.github.com/repos/ben-of-codecraft/azerothcore-wotlk/notifications{?since,all,participating}",
      "labels_url": "https://api.github.com/repos/ben-of-codecraft/azerothcore-wotlk/labels{/name}",
      "releases_url": "https://api.github.com/repos/ben-of-codecraft/azerothcore-wotlk/releases{/id}",
      "deployments_url": "https://api.github.com/repos/ben-of-codecraft/azerothcore-wotlk/deployments",
      "created_at": "2023-08-07T17:59:13Z",
      "updated_at": "2023-08-07T17:59:13Z",
      "pushed_at": "2023-08-07T22:02:52Z",
      "git_url": "git://github.com/ben-of-codecraft/azerothcore-wotlk.git",
      "ssh_url": "git@github.com:ben-of-codecraft/azerothcore-wotlk.git",
      "clone_url": "https://github.com/ben-of-codecraft/azerothcore-wotlk.git",
      "svn_url": "https://github.com/ben-of-codecraft/azerothcore-wotlk",
      "homepage": "http://www.azerothcore.org",
      "size": 707745,
      "stargazers_count": 0,
      "watchers_count": 0,
      "language": null,
      "has_issues": false,
      "has_projects": true,
      "has_downloads": true,
      "has_wiki": true,
      "has_pages": false,
      "has_discussions": false,
      "forks_count": 0,
      "mirror_url": null,
      "archived": false,
      "disabled": false,
      "open_issues_count": 0,
      "license": {
        "key": "agpl-3.0",
        "name": "GNU Affero General Public License v3.0",
        "spdx_id": "AGPL-3.0",
        "url": "https://api.github.com/licenses/agpl-3.0",
        "node_id": "MDc6TGljZW5zZTE="
      },
      "allow_forking": true,
      "is_template": false,
      "web_commit_signoff_required": false,
      "topics": [],
      "visibility": "public",
      "forks": 0,
      "open_issues": 0,
      "watchers": 0,
      "default_branch": "master",
      "permissions": {
        "admin": true,
        "maintain": true,
        "push": true,
        "triage": true,
        "pull": true
      },
      "commits": []
    },
    {
      "id": 607865889,
      "node_id": "R_kgDOJDtMIQ",
      "name": "ben-of-codecraft",
      "full_name": "ben-of-codecraft/ben-of-codecraft",
      "private": false,
      "owner": {
        "login": "ben-of-codecraft",
        "id": 110695027,
        "node_id": "U_kgDOBpkScw",
        "avatar_url": "https://avatars.githubusercontent.com/u/110695027?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ben-of-codecraft",
        "html_url": "https://github.com/ben-of-codecraft",
        "followers_url": "https://api.github.com/users/ben-of-codecraft/followers",
        "following_url": "https://api.github.com/users/ben-of-codecraft/following{/other_user}",
        "gists_url": "https://api.github.com/users/ben-of-codecraft/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/ben-of-codecraft/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ben-of-codecraft/subscriptions",
        "organizations_url": "https://api.github.com/users/ben-of-codecraft/orgs",
        "repos_url": "https://api.github.com/users/ben-of-codecraft/repos",
        "events_url": "https://api.github.com/users/ben-of-codecraft/events{/privacy}",
        "received_events_url": "https://api.github.com/users/ben-of-codecraft/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/ben-of-codecraft/ben-of-codecraft",
      "description": "My personal profile page",
      "fork": false,
      "url": "https://api.github.com/repos/ben-of-codecraft/ben-of-codecraft",
      "forks_url": "https://api.github.com/repos/ben-of-codecraft/ben-of-codecraft/forks",
      "keys_url": "https://api.github.com/repos/ben-of-codecraft/ben-of-codecraft/keys{/key_id}",
      "collaborators_url": "https://api.github.com/repos/ben-of-codecraft/ben-of-codecraft/collaborators{/collaborator}",
      "teams_url": "https://api.github.com/repos/ben-of-codecraft/ben-of-codecraft/teams",
      "hooks_url": "https://api.github.com/repos/ben-of-codecraft/ben-of-codecraft/hooks",
      "issue_events_url": "https://api.github.com/repos/ben-of-codecraft/ben-of-codecraft/issues/events{/number}",
      "events_url": "https://api.github.com/repos/ben-of-codecraft/ben-of-codecraft/events",
      "assignees_url": "https://api.github.com/repos/ben-of-codecraft/ben-of-codecraft/assignees{/user}",
      "branches_url": "https://api.github.com/repos/ben-of-codecraft/ben-of-codecraft/branches{/branch}",
      "tags_url": "https://api.github.com/repos/ben-of-codecraft/ben-of-codecraft/tags",
      "blobs_url": "https://api.github.com/repos/ben-of-codecraft/ben-of-codecraft/git/blobs{/sha}",
      "git_tags_url": "https://api.github.com/repos/ben-of-codecraft/ben-of-codecraft/git/tags{/sha}",
      "git_refs_url": "https://api.github.com/repos/ben-of-codecraft/ben-of-codecraft/git/refs{/sha}",
      "trees_url": "https://api.github.com/repos/ben-of-codecraft/ben-of-codecraft/git/trees{/sha}",
      "statuses_url": "https://api.github.com/repos/ben-of-codecraft/ben-of-codecraft/statuses/{sha}",
      "languages_url": "https://api.github.com/repos/ben-of-codecraft/ben-of-codecraft/languages",
      "stargazers_url": "https://api.github.com/repos/ben-of-codecraft/ben-of-codecraft/stargazers",
      "contributors_url": "https://api.github.com/repos/ben-of-codecraft/ben-of-codecraft/contributors",
      "subscribers_url": "https://api.github.com/repos/ben-of-codecraft/ben-of-codecraft/subscribers",
      "subscription_url": "https://api.github.com/repos/ben-of-codecraft/ben-of-codecraft/subscription",
      "commits_url": "https://api.github.com/repos/ben-of-codecraft/ben-of-codecraft/commits{/sha}",
      "git_commits_url": "https://api.github.com/repos/ben-of-codecraft/ben-of-codecraft/git/commits{/sha}",
      "comments_url": "https://api.github.com/repos/ben-of-codecraft/ben-of-codecraft/comments{/number}",
      "issue_comment_url": "https://api.github.com/repos/ben-of-codecraft/ben-of-codecraft/issues/comments{/number}",
      "contents_url": "https://api.github.com/repos/ben-of-codecraft/ben-of-codecraft/contents/{+path}",
      "compare_url": "https://api.github.com/repos/ben-of-codecraft/ben-of-codecraft/compare/{base}...{head}",
      "merges_url": "https://api.github.com/repos/ben-of-codecraft/ben-of-codecraft/merges",
      "archive_url": "https://api.github.com/repos/ben-of-codecraft/ben-of-codecraft/{archive_format}{/ref}",
      "downloads_url": "https://api.github.com/repos/ben-of-codecraft/ben-of-codecraft/downloads",
      "issues_url": "https://api.github.com/repos/ben-of-codecraft/ben-of-codecraft/issues{/number}",
      "pulls_url": "https://api.github.com/repos/ben-of-codecraft/ben-of-codecraft/pulls{/number}",
      "milestones_url": "https://api.github.com/repos/ben-of-codecraft/ben-of-codecraft/milestones{/number}",
      "notifications_url": "https://api.github.com/repos/ben-of-codecraft/ben-of-codecraft/notifications{?since,all,participating}",
      "labels_url": "https://api.github.com/repos/ben-of-codecraft/ben-of-codecraft/labels{/name}",
      "releases_url": "https://api.github.com/repos/ben-of-codecraft/ben-of-codecraft/releases{/id}",
      "deployments_url": "https://api.github.com/repos/ben-of-codecraft/ben-of-codecraft/deployments",
      "created_at": "2023-02-28T20:46:51Z",
      "updated_at": "2023-02-28T20:46:51Z",
      "pushed_at": "2024-02-15T22:49:19Z",
      "git_url": "git://github.com/ben-of-codecraft/ben-of-codecraft.git",
      "ssh_url": "git@github.com:ben-of-codecraft/ben-of-codecraft.git",
      "clone_url": "https://github.com/ben-of-codecraft/ben-of-codecraft.git",
      "svn_url": "https://github.com/ben-of-codecraft/ben-of-codecraft",
      "homepage": null,
      "size": 19513,
      "stargazers_count": 0,
      "watchers_count": 0,
      "language": null,
      "has_issues": true,
      "has_projects": true,
      "has_downloads": true,
      "has_wiki": true,
      "has_pages": false,
      "has_discussions": false,
      "forks_count": 0,
      "mirror_url": null,
      "archived": false,
      "disabled": false,
      "open_issues_count": 0,
      "license": null,
      "allow_forking": true,
      "is_template": false,
      "web_commit_signoff_required": false,
      "topics": [],
      "visibility": "public",
      "forks": 0,
      "open_issues": 0,
      "watchers": 0,
      "default_branch": "main",
      "permissions": {
        "admin": true,
        "maintain": true,
        "push": true,
        "triage": true,
        "pull": true
      },
      "commits": [
        {
          "sha": "118f181f04ec19b0b8459cfcc175824e6cef34ff",
          "committedDate": "2024-02-15T22:49:10Z",
          "message": "Merge branch 'main' of github.com:ben-of-codecraft/ben-of-codecraft",
          "messageBody": "",
          "additions": 153,
          "deletions": 0,
          "repository": {
            "owner": {
              "login": "ben-of-codecraft"
            },
            "name": "ben-of-codecraft"
          }
        },
        {
          "sha": "ab20546f58856de224dcfb2f6fb7cbb7118928e8",
          "committedDate": "2024-02-15T22:48:58Z",
          "message": "added more badges",
          "messageBody": "",
          "additions": 821,
          "deletions": 3,
          "repository": {
            "owner": {
              "login": "ben-of-codecraft"
            },
            "name": "ben-of-codecraft"
          }
        },
        {
          "sha": "fadbd5a9c6fd0e89a9a3b0044fb893c631cbea9f",
          "committedDate": "2024-02-15T22:43:59Z",
          "message": "Added badges",
          "messageBody": "",
          "additions": 1249,
          "deletions": 5,
          "repository": {
            "owner": {
              "login": "ben-of-codecraft"
            },
            "name": "ben-of-codecraft"
          }
        },
        {
          "sha": "7e76cd4afd0acf5586db49746e7df68c4afd2b0b",
          "committedDate": "2024-02-12T21:37:45Z",
          "message": "Update README.md",
          "messageBody": "",
          "additions": 0,
          "deletions": 0,
          "repository": {
            "owner": {
              "login": "ben-of-codecraft"
            },
            "name": "ben-of-codecraft"
          }
        },
        {
          "sha": "d7ca28b8cd1fd28599ab9b4acf3fdb8885a44b47",
          "committedDate": "2024-02-12T21:36:56Z",
          "message": "Add files via upload",
          "messageBody": "",
          "additions": 0,
          "deletions": 0,
          "repository": {
            "owner": {
              "login": "ben-of-codecraft"
            },
            "name": "ben-of-codecraft"
          }
        },
        {
          "sha": "bd9703c366c84edfbbc380c69fbd64a0569db05c",
          "committedDate": "2024-01-06T21:10:46Z",
          "message": "Update README.md",
          "messageBody": "",
          "additions": 1,
          "deletions": 1,
          "repository": {
            "owner": {
              "login": "ben-of-codecraft"
            },
            "name": "ben-of-codecraft"
          }
        },
        {
          "sha": "ca9da79e338ddb67956f4e75797d32539ab2d6a4",
          "committedDate": "2023-07-07T15:50:39Z",
          "message": "Update README.md\n\nSadly one of our dogs passed on",
          "messageBody": "Sadly one of our dogs passed on",
          "additions": 1,
          "deletions": 1,
          "repository": {
            "owner": {
              "login": "ben-of-codecraft"
            },
            "name": "ben-of-codecraft"
          }
        },
        {
          "sha": "a54861388cd7bad8a3639ebce438067a10ddac8f",
          "committedDate": "2023-06-08T23:00:33Z",
          "message": "updated sizes",
          "messageBody": "",
          "additions": 0,
          "deletions": 0,
          "repository": {
            "owner": {
              "login": "ben-of-codecraft"
            },
            "name": "ben-of-codecraft"
          }
        },
        {
          "sha": "dd4e0ada5569608cac1b57dad04931415019da0a",
          "committedDate": "2023-06-08T22:56:29Z",
          "message": "added imaged",
          "messageBody": "",
          "additions": 0,
          "deletions": 0,
          "repository": {
            "owner": {
              "login": "ben-of-codecraft"
            },
            "name": "ben-of-codecraft"
          }
        },
        {
          "sha": "721d38573d838ec3c0893541bd60ac2b61bed203",
          "committedDate": "2023-06-08T22:55:56Z",
          "message": "improving readme",
          "messageBody": "",
          "additions": 10,
          "deletions": 36,
          "repository": {
            "owner": {
              "login": "ben-of-codecraft"
            },
            "name": "ben-of-codecraft"
          }
        },
        {
          "sha": "240a20916dfc5b5158eb6ecafe5c29dfdfe6176c",
          "committedDate": "2023-06-08T21:43:00Z",
          "message": "improving readme",
          "messageBody": "",
          "additions": 1,
          "deletions": 1,
          "repository": {
            "owner": {
              "login": "ben-of-codecraft"
            },
            "name": "ben-of-codecraft"
          }
        },
        {
          "sha": "b790ccff68cf1feefada73dcd8e9b7a67b4e7d28",
          "committedDate": "2023-06-08T21:42:39Z",
          "message": "improving readme",
          "messageBody": "",
          "additions": 1,
          "deletions": 4,
          "repository": {
            "owner": {
              "login": "ben-of-codecraft"
            },
            "name": "ben-of-codecraft"
          }
        },
        {
          "sha": "10c1d77ed74c8ae49c2c89f43cffd7fd9d4599cd",
          "committedDate": "2023-06-08T21:41:52Z",
          "message": "improving readme",
          "messageBody": "",
          "additions": 1,
          "deletions": 0,
          "repository": {
            "owner": {
              "login": "ben-of-codecraft"
            },
            "name": "ben-of-codecraft"
          }
        },
        {
          "sha": "39479f7e7529277758d5d278254e983c027fdb2e",
          "committedDate": "2023-06-08T21:41:20Z",
          "message": "improving readme",
          "messageBody": "",
          "additions": 1,
          "deletions": 1,
          "repository": {
            "owner": {
              "login": "ben-of-codecraft"
            },
            "name": "ben-of-codecraft"
          }
        },
        {
          "sha": "05945f6353e2f9e350c92b8119a3da328e675b2a",
          "committedDate": "2023-06-08T21:40:47Z",
          "message": "improving readme",
          "messageBody": "",
          "additions": 1,
          "deletions": 1,
          "repository": {
            "owner": {
              "login": "ben-of-codecraft"
            },
            "name": "ben-of-codecraft"
          }
        },
        {
          "sha": "5fd749af7afcd4fa20554945fc7aecedcacbf3e3",
          "committedDate": "2023-06-08T21:40:25Z",
          "message": "improving readme",
          "messageBody": "",
          "additions": 1,
          "deletions": 1,
          "repository": {
            "owner": {
              "login": "ben-of-codecraft"
            },
            "name": "ben-of-codecraft"
          }
        },
        {
          "sha": "986131069d21b838b600d7fea9a90d5232db401b",
          "committedDate": "2023-06-08T21:40:10Z",
          "message": "improving readme",
          "messageBody": "",
          "additions": 1,
          "deletions": 1,
          "repository": {
            "owner": {
              "login": "ben-of-codecraft"
            },
            "name": "ben-of-codecraft"
          }
        },
        {
          "sha": "40bff5467d3afe2030a0fbf05438f6217cc7075d",
          "committedDate": "2023-06-08T21:39:49Z",
          "message": "improving readme",
          "messageBody": "",
          "additions": 1,
          "deletions": 1,
          "repository": {
            "owner": {
              "login": "ben-of-codecraft"
            },
            "name": "ben-of-codecraft"
          }
        },
        {
          "sha": "85e1b2596f09458eb5f4b320ac2c6b0413932a2d",
          "committedDate": "2023-06-08T21:39:01Z",
          "message": "improving readme",
          "messageBody": "",
          "additions": 3,
          "deletions": 5,
          "repository": {
            "owner": {
              "login": "ben-of-codecraft"
            },
            "name": "ben-of-codecraft"
          }
        },
        {
          "sha": "91d0b8a4a36d180b966fafa0db5279328ab5f6dd",
          "committedDate": "2023-06-08T21:32:49Z",
          "message": "improving readme",
          "messageBody": "",
          "additions": 8,
          "deletions": 4,
          "repository": {
            "owner": {
              "login": "ben-of-codecraft"
            },
            "name": "ben-of-codecraft"
          }
        },
        {
          "sha": "d7a083dff218fcbcc18eff3556491fc782e41e43",
          "committedDate": "2023-06-08T21:32:24Z",
          "message": "improving readme",
          "messageBody": "",
          "additions": 5,
          "deletions": 9,
          "repository": {
            "owner": {
              "login": "ben-of-codecraft"
            },
            "name": "ben-of-codecraft"
          }
        },
        {
          "sha": "1c18f744467f642a889d45b5b458b0235d9ec523",
          "committedDate": "2023-06-08T21:28:11Z",
          "message": "improving readme",
          "messageBody": "",
          "additions": 0,
          "deletions": 0,
          "repository": {
            "owner": {
              "login": "ben-of-codecraft"
            },
            "name": "ben-of-codecraft"
          }
        },
        {
          "sha": "4315a0dec46c0a158581306a13d18a985da11116",
          "committedDate": "2023-06-08T21:27:22Z",
          "message": "improving readme",
          "messageBody": "",
          "additions": 2,
          "deletions": 13,
          "repository": {
            "owner": {
              "login": "ben-of-codecraft"
            },
            "name": "ben-of-codecraft"
          }
        },
        {
          "sha": "02ad6269a1d631a8111ae207eeb5fe9b2b7499a4",
          "committedDate": "2023-06-08T21:22:36Z",
          "message": "improving readme",
          "messageBody": "",
          "additions": 0,
          "deletions": 0,
          "repository": {
            "owner": {
              "login": "ben-of-codecraft"
            },
            "name": "ben-of-codecraft"
          }
        },
        {
          "sha": "57f619be8fe81d0b5c8bd7a4ff63e0718a66da69",
          "committedDate": "2023-06-08T21:21:27Z",
          "message": "testing tables",
          "messageBody": "",
          "additions": 12,
          "deletions": 1,
          "repository": {
            "owner": {
              "login": "ben-of-codecraft"
            },
            "name": "ben-of-codecraft"
          }
        },
        {
          "sha": "ee7af875979dedc45c3f36b1d055ab7542791903",
          "committedDate": "2023-06-08T20:25:52Z",
          "message": "testing tags and styling",
          "messageBody": "",
          "additions": 5,
          "deletions": 2,
          "repository": {
            "owner": {
              "login": "ben-of-codecraft"
            },
            "name": "ben-of-codecraft"
          }
        },
        {
          "sha": "a18c28f4792cf499311868da4a794708fbad4337",
          "committedDate": "2023-06-08T18:16:27Z",
          "message": "updated",
          "messageBody": "",
          "additions": 26,
          "deletions": 2,
          "repository": {
            "owner": {
              "login": "ben-of-codecraft"
            },
            "name": "ben-of-codecraft"
          }
        },
        {
          "sha": "542814978a4c51cf51201766f0fe143b1ba8ecba",
          "committedDate": "2023-06-08T18:15:59Z",
          "message": "added new text testing output",
          "messageBody": "",
          "additions": 14,
          "deletions": 0,
          "repository": {
            "owner": {
              "login": "ben-of-codecraft"
            },
            "name": "ben-of-codecraft"
          }
        },
        {
          "sha": "24379903daa972586d97f04ae4fd2f7e29f32b06",
          "committedDate": "2023-02-28T20:46:51Z",
          "message": "Initial commit",
          "messageBody": "",
          "additions": 16,
          "deletions": 0,
          "repository": {
            "owner": {
              "login": "ben-of-codecraft"
            },
            "name": "ben-of-codecraft"
          }
        }
      ]
    },
    {
      "id": 693336072,
      "node_id": "R_kgDOKVN4CA",
      "name": "electron-s3-file-manager",
      "full_name": "ben-of-codecraft/electron-s3-file-manager",
      "private": false,
      "owner": {
        "login": "ben-of-codecraft",
        "id": 110695027,
        "node_id": "U_kgDOBpkScw",
        "avatar_url": "https://avatars.githubusercontent.com/u/110695027?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ben-of-codecraft",
        "html_url": "https://github.com/ben-of-codecraft",
        "followers_url": "https://api.github.com/users/ben-of-codecraft/followers",
        "following_url": "https://api.github.com/users/ben-of-codecraft/following{/other_user}",
        "gists_url": "https://api.github.com/users/ben-of-codecraft/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/ben-of-codecraft/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ben-of-codecraft/subscriptions",
        "organizations_url": "https://api.github.com/users/ben-of-codecraft/orgs",
        "repos_url": "https://api.github.com/users/ben-of-codecraft/repos",
        "events_url": "https://api.github.com/users/ben-of-codecraft/events{/privacy}",
        "received_events_url": "https://api.github.com/users/ben-of-codecraft/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/ben-of-codecraft/electron-s3-file-manager",
      "description": "A GUI AWS S3 file manager. It supports keyword search, download, upload and preview video.",
      "fork": true,
      "url": "https://api.github.com/repos/ben-of-codecraft/electron-s3-file-manager",
      "forks_url": "https://api.github.com/repos/ben-of-codecraft/electron-s3-file-manager/forks",
      "keys_url": "https://api.github.com/repos/ben-of-codecraft/electron-s3-file-manager/keys{/key_id}",
      "collaborators_url": "https://api.github.com/repos/ben-of-codecraft/electron-s3-file-manager/collaborators{/collaborator}",
      "teams_url": "https://api.github.com/repos/ben-of-codecraft/electron-s3-file-manager/teams",
      "hooks_url": "https://api.github.com/repos/ben-of-codecraft/electron-s3-file-manager/hooks",
      "issue_events_url": "https://api.github.com/repos/ben-of-codecraft/electron-s3-file-manager/issues/events{/number}",
      "events_url": "https://api.github.com/repos/ben-of-codecraft/electron-s3-file-manager/events",
      "assignees_url": "https://api.github.com/repos/ben-of-codecraft/electron-s3-file-manager/assignees{/user}",
      "branches_url": "https://api.github.com/repos/ben-of-codecraft/electron-s3-file-manager/branches{/branch}",
      "tags_url": "https://api.github.com/repos/ben-of-codecraft/electron-s3-file-manager/tags",
      "blobs_url": "https://api.github.com/repos/ben-of-codecraft/electron-s3-file-manager/git/blobs{/sha}",
      "git_tags_url": "https://api.github.com/repos/ben-of-codecraft/electron-s3-file-manager/git/tags{/sha}",
      "git_refs_url": "https://api.github.com/repos/ben-of-codecraft/electron-s3-file-manager/git/refs{/sha}",
      "trees_url": "https://api.github.com/repos/ben-of-codecraft/electron-s3-file-manager/git/trees{/sha}",
      "statuses_url": "https://api.github.com/repos/ben-of-codecraft/electron-s3-file-manager/statuses/{sha}",
      "languages_url": "https://api.github.com/repos/ben-of-codecraft/electron-s3-file-manager/languages",
      "stargazers_url": "https://api.github.com/repos/ben-of-codecraft/electron-s3-file-manager/stargazers",
      "contributors_url": "https://api.github.com/repos/ben-of-codecraft/electron-s3-file-manager/contributors",
      "subscribers_url": "https://api.github.com/repos/ben-of-codecraft/electron-s3-file-manager/subscribers",
      "subscription_url": "https://api.github.com/repos/ben-of-codecraft/electron-s3-file-manager/subscription",
      "commits_url": "https://api.github.com/repos/ben-of-codecraft/electron-s3-file-manager/commits{/sha}",
      "git_commits_url": "https://api.github.com/repos/ben-of-codecraft/electron-s3-file-manager/git/commits{/sha}",
      "comments_url": "https://api.github.com/repos/ben-of-codecraft/electron-s3-file-manager/comments{/number}",
      "issue_comment_url": "https://api.github.com/repos/ben-of-codecraft/electron-s3-file-manager/issues/comments{/number}",
      "contents_url": "https://api.github.com/repos/ben-of-codecraft/electron-s3-file-manager/contents/{+path}",
      "compare_url": "https://api.github.com/repos/ben-of-codecraft/electron-s3-file-manager/compare/{base}...{head}",
      "merges_url": "https://api.github.com/repos/ben-of-codecraft/electron-s3-file-manager/merges",
      "archive_url": "https://api.github.com/repos/ben-of-codecraft/electron-s3-file-manager/{archive_format}{/ref}",
      "downloads_url": "https://api.github.com/repos/ben-of-codecraft/electron-s3-file-manager/downloads",
      "issues_url": "https://api.github.com/repos/ben-of-codecraft/electron-s3-file-manager/issues{/number}",
      "pulls_url": "https://api.github.com/repos/ben-of-codecraft/electron-s3-file-manager/pulls{/number}",
      "milestones_url": "https://api.github.com/repos/ben-of-codecraft/electron-s3-file-manager/milestones{/number}",
      "notifications_url": "https://api.github.com/repos/ben-of-codecraft/electron-s3-file-manager/notifications{?since,all,participating}",
      "labels_url": "https://api.github.com/repos/ben-of-codecraft/electron-s3-file-manager/labels{/name}",
      "releases_url": "https://api.github.com/repos/ben-of-codecraft/electron-s3-file-manager/releases{/id}",
      "deployments_url": "https://api.github.com/repos/ben-of-codecraft/electron-s3-file-manager/deployments",
      "created_at": "2023-09-18T20:30:22Z",
      "updated_at": "2023-09-19T02:19:19Z",
      "pushed_at": "2023-10-19T03:59:08Z",
      "git_url": "git://github.com/ben-of-codecraft/electron-s3-file-manager.git",
      "ssh_url": "git@github.com:ben-of-codecraft/electron-s3-file-manager.git",
      "clone_url": "https://github.com/ben-of-codecraft/electron-s3-file-manager.git",
      "svn_url": "https://github.com/ben-of-codecraft/electron-s3-file-manager",
      "homepage": "",
      "size": 731,
      "stargazers_count": 0,
      "watchers_count": 0,
      "language": "JavaScript",
      "has_issues": false,
      "has_projects": true,
      "has_downloads": true,
      "has_wiki": false,
      "has_pages": false,
      "has_discussions": false,
      "forks_count": 0,
      "mirror_url": null,
      "archived": false,
      "disabled": false,
      "open_issues_count": 0,
      "license": {
        "key": "mit",
        "name": "MIT License",
        "spdx_id": "MIT",
        "url": "https://api.github.com/licenses/mit",
        "node_id": "MDc6TGljZW5zZTEz"
      },
      "allow_forking": true,
      "is_template": false,
      "web_commit_signoff_required": false,
      "topics": [],
      "visibility": "public",
      "forks": 0,
      "open_issues": 0,
      "watchers": 0,
      "default_branch": "master",
      "permissions": {
        "admin": true,
        "maintain": true,
        "push": true,
        "triage": true,
        "pull": true
      },
      "commits": [
        {
          "sha": "1dc258d7b0a9e7965e3636a355df57ff80a04480",
          "committedDate": "2023-10-19T04:54:16Z",
          "message": "fixed more issues with uploaded and fixed windows electron build",
          "messageBody": "",
          "additions": 123,
          "deletions": 72,
          "repository": {
            "owner": {
              "login": "ben-of-codecraft"
            },
            "name": "electron-s3-file-manager"
          }
        },
        {
          "sha": "0e5aeb4568bb27f62497c0fc8aec1a6dc7e996cf",
          "committedDate": "2023-09-22T06:19:07Z",
          "message": "Fixed issue with unrecognized mimetypes like binray files",
          "messageBody": "",
          "additions": 2,
          "deletions": 2,
          "repository": {
            "owner": {
              "login": "ben-of-codecraft"
            },
            "name": "electron-s3-file-manager"
          }
        },
        {
          "sha": "cd52f3ad9cb35cf0beeb9b3d5a56a07444779032",
          "committedDate": "2023-09-19T03:16:08Z",
          "message": "Added endpoint as option when configuring client",
          "messageBody": "",
          "additions": 284,
          "deletions": 3,
          "repository": {
            "owner": {
              "login": "ben-of-codecraft"
            },
            "name": "electron-s3-file-manager"
          }
        },
        {
          "sha": "3456808d481ae6c11d4ae0b5155c2030429039fa",
          "committedDate": "2023-09-19T03:15:30Z",
          "message": "Bumped version",
          "messageBody": "",
          "additions": 4,
          "deletions": 1,
          "repository": {
            "owner": {
              "login": "ben-of-codecraft"
            },
            "name": "electron-s3-file-manager"
          }
        }
      ]
    },
    {
      "id": 697483555,
      "node_id": "R_kgDOKZLBIw",
      "name": "electron-wix-msi",
      "full_name": "ben-of-codecraft/electron-wix-msi",
      "private": false,
      "owner": {
        "login": "ben-of-codecraft",
        "id": 110695027,
        "node_id": "U_kgDOBpkScw",
        "avatar_url": "https://avatars.githubusercontent.com/u/110695027?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ben-of-codecraft",
        "html_url": "https://github.com/ben-of-codecraft",
        "followers_url": "https://api.github.com/users/ben-of-codecraft/followers",
        "following_url": "https://api.github.com/users/ben-of-codecraft/following{/other_user}",
        "gists_url": "https://api.github.com/users/ben-of-codecraft/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/ben-of-codecraft/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ben-of-codecraft/subscriptions",
        "organizations_url": "https://api.github.com/users/ben-of-codecraft/orgs",
        "repos_url": "https://api.github.com/users/ben-of-codecraft/repos",
        "events_url": "https://api.github.com/users/ben-of-codecraft/events{/privacy}",
        "received_events_url": "https://api.github.com/users/ben-of-codecraft/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/ben-of-codecraft/electron-wix-msi",
      "description": ":dvd: Create traditional MSI installers for your Electron app",
      "fork": true,
      "url": "https://api.github.com/repos/ben-of-codecraft/electron-wix-msi",
      "forks_url": "https://api.github.com/repos/ben-of-codecraft/electron-wix-msi/forks",
      "keys_url": "https://api.github.com/repos/ben-of-codecraft/electron-wix-msi/keys{/key_id}",
      "collaborators_url": "https://api.github.com/repos/ben-of-codecraft/electron-wix-msi/collaborators{/collaborator}",
      "teams_url": "https://api.github.com/repos/ben-of-codecraft/electron-wix-msi/teams",
      "hooks_url": "https://api.github.com/repos/ben-of-codecraft/electron-wix-msi/hooks",
      "issue_events_url": "https://api.github.com/repos/ben-of-codecraft/electron-wix-msi/issues/events{/number}",
      "events_url": "https://api.github.com/repos/ben-of-codecraft/electron-wix-msi/events",
      "assignees_url": "https://api.github.com/repos/ben-of-codecraft/electron-wix-msi/assignees{/user}",
      "branches_url": "https://api.github.com/repos/ben-of-codecraft/electron-wix-msi/branches{/branch}",
      "tags_url": "https://api.github.com/repos/ben-of-codecraft/electron-wix-msi/tags",
      "blobs_url": "https://api.github.com/repos/ben-of-codecraft/electron-wix-msi/git/blobs{/sha}",
      "git_tags_url": "https://api.github.com/repos/ben-of-codecraft/electron-wix-msi/git/tags{/sha}",
      "git_refs_url": "https://api.github.com/repos/ben-of-codecraft/electron-wix-msi/git/refs{/sha}",
      "trees_url": "https://api.github.com/repos/ben-of-codecraft/electron-wix-msi/git/trees{/sha}",
      "statuses_url": "https://api.github.com/repos/ben-of-codecraft/electron-wix-msi/statuses/{sha}",
      "languages_url": "https://api.github.com/repos/ben-of-codecraft/electron-wix-msi/languages",
      "stargazers_url": "https://api.github.com/repos/ben-of-codecraft/electron-wix-msi/stargazers",
      "contributors_url": "https://api.github.com/repos/ben-of-codecraft/electron-wix-msi/contributors",
      "subscribers_url": "https://api.github.com/repos/ben-of-codecraft/electron-wix-msi/subscribers",
      "subscription_url": "https://api.github.com/repos/ben-of-codecraft/electron-wix-msi/subscription",
      "commits_url": "https://api.github.com/repos/ben-of-codecraft/electron-wix-msi/commits{/sha}",
      "git_commits_url": "https://api.github.com/repos/ben-of-codecraft/electron-wix-msi/git/commits{/sha}",
      "comments_url": "https://api.github.com/repos/ben-of-codecraft/electron-wix-msi/comments{/number}",
      "issue_comment_url": "https://api.github.com/repos/ben-of-codecraft/electron-wix-msi/issues/comments{/number}",
      "contents_url": "https://api.github.com/repos/ben-of-codecraft/electron-wix-msi/contents/{+path}",
      "compare_url": "https://api.github.com/repos/ben-of-codecraft/electron-wix-msi/compare/{base}...{head}",
      "merges_url": "https://api.github.com/repos/ben-of-codecraft/electron-wix-msi/merges",
      "archive_url": "https://api.github.com/repos/ben-of-codecraft/electron-wix-msi/{archive_format}{/ref}",
      "downloads_url": "https://api.github.com/repos/ben-of-codecraft/electron-wix-msi/downloads",
      "issues_url": "https://api.github.com/repos/ben-of-codecraft/electron-wix-msi/issues{/number}",
      "pulls_url": "https://api.github.com/repos/ben-of-codecraft/electron-wix-msi/pulls{/number}",
      "milestones_url": "https://api.github.com/repos/ben-of-codecraft/electron-wix-msi/milestones{/number}",
      "notifications_url": "https://api.github.com/repos/ben-of-codecraft/electron-wix-msi/notifications{?since,all,participating}",
      "labels_url": "https://api.github.com/repos/ben-of-codecraft/electron-wix-msi/labels{/name}",
      "releases_url": "https://api.github.com/repos/ben-of-codecraft/electron-wix-msi/releases{/id}",
      "deployments_url": "https://api.github.com/repos/ben-of-codecraft/electron-wix-msi/deployments",
      "created_at": "2023-09-27T20:27:21Z",
      "updated_at": "2023-09-27T20:59:17Z",
      "pushed_at": "2023-09-27T20:59:11Z",
      "git_url": "git://github.com/ben-of-codecraft/electron-wix-msi.git",
      "ssh_url": "git@github.com:ben-of-codecraft/electron-wix-msi.git",
      "clone_url": "https://github.com/ben-of-codecraft/electron-wix-msi.git",
      "svn_url": "https://github.com/ben-of-codecraft/electron-wix-msi",
      "homepage": "",
      "size": 8148,
      "stargazers_count": 0,
      "watchers_count": 0,
      "language": "TypeScript",
      "has_issues": false,
      "has_projects": true,
      "has_downloads": true,
      "has_wiki": true,
      "has_pages": false,
      "has_discussions": false,
      "forks_count": 1,
      "mirror_url": null,
      "archived": false,
      "disabled": false,
      "open_issues_count": 0,
      "license": {
        "key": "mit",
        "name": "MIT License",
        "spdx_id": "MIT",
        "url": "https://api.github.com/licenses/mit",
        "node_id": "MDc6TGljZW5zZTEz"
      },
      "allow_forking": true,
      "is_template": false,
      "web_commit_signoff_required": false,
      "topics": [],
      "visibility": "public",
      "forks": 1,
      "open_issues": 0,
      "watchers": 0,
      "default_branch": "master",
      "permissions": {
        "admin": true,
        "maintain": true,
        "push": true,
        "triage": true,
        "pull": true
      },
      "commits": [
        {
          "sha": "a7ff90ac7620cbafdfaaffc0b807d21f4b66b4e5",
          "committedDate": "2023-09-27T20:55:45Z",
          "message": "Added ability to add an autorun after install in the background",
          "messageBody": "",
          "additions": 1,
          "deletions": 0,
          "repository": {
            "owner": {
              "login": "ben-of-codecraft"
            },
            "name": "electron-wix-msi"
          }
        },
        {
          "sha": "716591eaf57e3b1f71c18c2866fbb122d5e0175e",
          "committedDate": "2023-09-27T20:32:33Z",
          "message": "Added ability to configura autorun when building wix - msi",
          "messageBody": "",
          "additions": 4,
          "deletions": 0,
          "repository": {
            "owner": {
              "login": "ben-of-codecraft"
            },
            "name": "electron-wix-msi"
          }
        },
        {
          "sha": "c4d2c09fda1a582fbacb55f15ca5a98e7ea2274f",
          "committedDate": "2023-09-27T20:32:08Z",
          "message": "Added aut-run and updated wix main template to enable auto run",
          "messageBody": "",
          "additions": 5,
          "deletions": 0,
          "repository": {
            "owner": {
              "login": "ben-of-codecraft"
            },
            "name": "electron-wix-msi"
          }
        }
      ]
    },
    {
      "id": 690279844,
      "node_id": "R_kgDOKSTVpA",
      "name": "mod-autobalance",
      "full_name": "ben-of-codecraft/mod-autobalance",
      "private": false,
      "owner": {
        "login": "ben-of-codecraft",
        "id": 110695027,
        "node_id": "U_kgDOBpkScw",
        "avatar_url": "https://avatars.githubusercontent.com/u/110695027?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ben-of-codecraft",
        "html_url": "https://github.com/ben-of-codecraft",
        "followers_url": "https://api.github.com/users/ben-of-codecraft/followers",
        "following_url": "https://api.github.com/users/ben-of-codecraft/following{/other_user}",
        "gists_url": "https://api.github.com/users/ben-of-codecraft/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/ben-of-codecraft/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ben-of-codecraft/subscriptions",
        "organizations_url": "https://api.github.com/users/ben-of-codecraft/orgs",
        "repos_url": "https://api.github.com/users/ben-of-codecraft/repos",
        "events_url": "https://api.github.com/users/ben-of-codecraft/events{/privacy}",
        "received_events_url": "https://api.github.com/users/ben-of-codecraft/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/ben-of-codecraft/mod-autobalance",
      "description": "Module for AzerothCore(MaNGOS -> TrinityCore -> SunwellCore)",
      "fork": true,
      "url": "https://api.github.com/repos/ben-of-codecraft/mod-autobalance",
      "forks_url": "https://api.github.com/repos/ben-of-codecraft/mod-autobalance/forks",
      "keys_url": "https://api.github.com/repos/ben-of-codecraft/mod-autobalance/keys{/key_id}",
      "collaborators_url": "https://api.github.com/repos/ben-of-codecraft/mod-autobalance/collaborators{/collaborator}",
      "teams_url": "https://api.github.com/repos/ben-of-codecraft/mod-autobalance/teams",
      "hooks_url": "https://api.github.com/repos/ben-of-codecraft/mod-autobalance/hooks",
      "issue_events_url": "https://api.github.com/repos/ben-of-codecraft/mod-autobalance/issues/events{/number}",
      "events_url": "https://api.github.com/repos/ben-of-codecraft/mod-autobalance/events",
      "assignees_url": "https://api.github.com/repos/ben-of-codecraft/mod-autobalance/assignees{/user}",
      "branches_url": "https://api.github.com/repos/ben-of-codecraft/mod-autobalance/branches{/branch}",
      "tags_url": "https://api.github.com/repos/ben-of-codecraft/mod-autobalance/tags",
      "blobs_url": "https://api.github.com/repos/ben-of-codecraft/mod-autobalance/git/blobs{/sha}",
      "git_tags_url": "https://api.github.com/repos/ben-of-codecraft/mod-autobalance/git/tags{/sha}",
      "git_refs_url": "https://api.github.com/repos/ben-of-codecraft/mod-autobalance/git/refs{/sha}",
      "trees_url": "https://api.github.com/repos/ben-of-codecraft/mod-autobalance/git/trees{/sha}",
      "statuses_url": "https://api.github.com/repos/ben-of-codecraft/mod-autobalance/statuses/{sha}",
      "languages_url": "https://api.github.com/repos/ben-of-codecraft/mod-autobalance/languages",
      "stargazers_url": "https://api.github.com/repos/ben-of-codecraft/mod-autobalance/stargazers",
      "contributors_url": "https://api.github.com/repos/ben-of-codecraft/mod-autobalance/contributors",
      "subscribers_url": "https://api.github.com/repos/ben-of-codecraft/mod-autobalance/subscribers",
      "subscription_url": "https://api.github.com/repos/ben-of-codecraft/mod-autobalance/subscription",
      "commits_url": "https://api.github.com/repos/ben-of-codecraft/mod-autobalance/commits{/sha}",
      "git_commits_url": "https://api.github.com/repos/ben-of-codecraft/mod-autobalance/git/commits{/sha}",
      "comments_url": "https://api.github.com/repos/ben-of-codecraft/mod-autobalance/comments{/number}",
      "issue_comment_url": "https://api.github.com/repos/ben-of-codecraft/mod-autobalance/issues/comments{/number}",
      "contents_url": "https://api.github.com/repos/ben-of-codecraft/mod-autobalance/contents/{+path}",
      "compare_url": "https://api.github.com/repos/ben-of-codecraft/mod-autobalance/compare/{base}...{head}",
      "merges_url": "https://api.github.com/repos/ben-of-codecraft/mod-autobalance/merges",
      "archive_url": "https://api.github.com/repos/ben-of-codecraft/mod-autobalance/{archive_format}{/ref}",
      "downloads_url": "https://api.github.com/repos/ben-of-codecraft/mod-autobalance/downloads",
      "issues_url": "https://api.github.com/repos/ben-of-codecraft/mod-autobalance/issues{/number}",
      "pulls_url": "https://api.github.com/repos/ben-of-codecraft/mod-autobalance/pulls{/number}",
      "milestones_url": "https://api.github.com/repos/ben-of-codecraft/mod-autobalance/milestones{/number}",
      "notifications_url": "https://api.github.com/repos/ben-of-codecraft/mod-autobalance/notifications{?since,all,participating}",
      "labels_url": "https://api.github.com/repos/ben-of-codecraft/mod-autobalance/labels{/name}",
      "releases_url": "https://api.github.com/repos/ben-of-codecraft/mod-autobalance/releases{/id}",
      "deployments_url": "https://api.github.com/repos/ben-of-codecraft/mod-autobalance/deployments",
      "created_at": "2023-09-11T22:30:16Z",
      "updated_at": "2023-09-11T22:38:16Z",
      "pushed_at": "2023-09-11T22:38:11Z",
      "git_url": "git://github.com/ben-of-codecraft/mod-autobalance.git",
      "ssh_url": "git@github.com:ben-of-codecraft/mod-autobalance.git",
      "clone_url": "https://github.com/ben-of-codecraft/mod-autobalance.git",
      "svn_url": "https://github.com/ben-of-codecraft/mod-autobalance",
      "homepage": "http://www.azerothcore.org",
      "size": 186,
      "stargazers_count": 0,
      "watchers_count": 0,
      "language": "C++",
      "has_issues": false,
      "has_projects": true,
      "has_downloads": true,
      "has_wiki": true,
      "has_pages": false,
      "has_discussions": false,
      "forks_count": 1,
      "mirror_url": null,
      "archived": false,
      "disabled": false,
      "open_issues_count": 0,
      "license": null,
      "allow_forking": true,
      "is_template": false,
      "web_commit_signoff_required": false,
      "topics": [],
      "visibility": "public",
      "forks": 1,
      "open_issues": 0,
      "watchers": 0,
      "default_branch": "master",
      "permissions": {
        "admin": true,
        "maintain": true,
        "push": true,
        "triage": true,
        "pull": true
      },
      "commits": [
        {
          "sha": "268a717d3b1a60cf130c8953a3153d85e3b0f7bb",
          "committedDate": "2023-09-11T22:37:40Z",
          "message": "Fixed conflicts with NPCBots that break when queueing for battleground because autobalance attempts to scale.",
          "messageBody": "…d because autobalance attempts to scale.",
          "additions": 11,
          "deletions": 10,
          "repository": {
            "owner": {
              "login": "ben-of-codecraft"
            },
            "name": "mod-autobalance"
          }
        }
      ]
    },
    {
      "id": 734436146,
      "node_id": "R_kgDOK8abMg",
      "name": "TypeScriptToLua.github.io",
      "full_name": "ben-of-codecraft/TypeScriptToLua.github.io",
      "private": false,
      "owner": {
        "login": "ben-of-codecraft",
        "id": 110695027,
        "node_id": "U_kgDOBpkScw",
        "avatar_url": "https://avatars.githubusercontent.com/u/110695027?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ben-of-codecraft",
        "html_url": "https://github.com/ben-of-codecraft",
        "followers_url": "https://api.github.com/users/ben-of-codecraft/followers",
        "following_url": "https://api.github.com/users/ben-of-codecraft/following{/other_user}",
        "gists_url": "https://api.github.com/users/ben-of-codecraft/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/ben-of-codecraft/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ben-of-codecraft/subscriptions",
        "organizations_url": "https://api.github.com/users/ben-of-codecraft/orgs",
        "repos_url": "https://api.github.com/users/ben-of-codecraft/repos",
        "events_url": "https://api.github.com/users/ben-of-codecraft/events{/privacy}",
        "received_events_url": "https://api.github.com/users/ben-of-codecraft/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/ben-of-codecraft/TypeScriptToLua.github.io",
      "description": "https://typescripttolua.github.io/",
      "fork": true,
      "url": "https://api.github.com/repos/ben-of-codecraft/TypeScriptToLua.github.io",
      "forks_url": "https://api.github.com/repos/ben-of-codecraft/TypeScriptToLua.github.io/forks",
      "keys_url": "https://api.github.com/repos/ben-of-codecraft/TypeScriptToLua.github.io/keys{/key_id}",
      "collaborators_url": "https://api.github.com/repos/ben-of-codecraft/TypeScriptToLua.github.io/collaborators{/collaborator}",
      "teams_url": "https://api.github.com/repos/ben-of-codecraft/TypeScriptToLua.github.io/teams",
      "hooks_url": "https://api.github.com/repos/ben-of-codecraft/TypeScriptToLua.github.io/hooks",
      "issue_events_url": "https://api.github.com/repos/ben-of-codecraft/TypeScriptToLua.github.io/issues/events{/number}",
      "events_url": "https://api.github.com/repos/ben-of-codecraft/TypeScriptToLua.github.io/events",
      "assignees_url": "https://api.github.com/repos/ben-of-codecraft/TypeScriptToLua.github.io/assignees{/user}",
      "branches_url": "https://api.github.com/repos/ben-of-codecraft/TypeScriptToLua.github.io/branches{/branch}",
      "tags_url": "https://api.github.com/repos/ben-of-codecraft/TypeScriptToLua.github.io/tags",
      "blobs_url": "https://api.github.com/repos/ben-of-codecraft/TypeScriptToLua.github.io/git/blobs{/sha}",
      "git_tags_url": "https://api.github.com/repos/ben-of-codecraft/TypeScriptToLua.github.io/git/tags{/sha}",
      "git_refs_url": "https://api.github.com/repos/ben-of-codecraft/TypeScriptToLua.github.io/git/refs{/sha}",
      "trees_url": "https://api.github.com/repos/ben-of-codecraft/TypeScriptToLua.github.io/git/trees{/sha}",
      "statuses_url": "https://api.github.com/repos/ben-of-codecraft/TypeScriptToLua.github.io/statuses/{sha}",
      "languages_url": "https://api.github.com/repos/ben-of-codecraft/TypeScriptToLua.github.io/languages",
      "stargazers_url": "https://api.github.com/repos/ben-of-codecraft/TypeScriptToLua.github.io/stargazers",
      "contributors_url": "https://api.github.com/repos/ben-of-codecraft/TypeScriptToLua.github.io/contributors",
      "subscribers_url": "https://api.github.com/repos/ben-of-codecraft/TypeScriptToLua.github.io/subscribers",
      "subscription_url": "https://api.github.com/repos/ben-of-codecraft/TypeScriptToLua.github.io/subscription",
      "commits_url": "https://api.github.com/repos/ben-of-codecraft/TypeScriptToLua.github.io/commits{/sha}",
      "git_commits_url": "https://api.github.com/repos/ben-of-codecraft/TypeScriptToLua.github.io/git/commits{/sha}",
      "comments_url": "https://api.github.com/repos/ben-of-codecraft/TypeScriptToLua.github.io/comments{/number}",
      "issue_comment_url": "https://api.github.com/repos/ben-of-codecraft/TypeScriptToLua.github.io/issues/comments{/number}",
      "contents_url": "https://api.github.com/repos/ben-of-codecraft/TypeScriptToLua.github.io/contents/{+path}",
      "compare_url": "https://api.github.com/repos/ben-of-codecraft/TypeScriptToLua.github.io/compare/{base}...{head}",
      "merges_url": "https://api.github.com/repos/ben-of-codecraft/TypeScriptToLua.github.io/merges",
      "archive_url": "https://api.github.com/repos/ben-of-codecraft/TypeScriptToLua.github.io/{archive_format}{/ref}",
      "downloads_url": "https://api.github.com/repos/ben-of-codecraft/TypeScriptToLua.github.io/downloads",
      "issues_url": "https://api.github.com/repos/ben-of-codecraft/TypeScriptToLua.github.io/issues{/number}",
      "pulls_url": "https://api.github.com/repos/ben-of-codecraft/TypeScriptToLua.github.io/pulls{/number}",
      "milestones_url": "https://api.github.com/repos/ben-of-codecraft/TypeScriptToLua.github.io/milestones{/number}",
      "notifications_url": "https://api.github.com/repos/ben-of-codecraft/TypeScriptToLua.github.io/notifications{?since,all,participating}",
      "labels_url": "https://api.github.com/repos/ben-of-codecraft/TypeScriptToLua.github.io/labels{/name}",
      "releases_url": "https://api.github.com/repos/ben-of-codecraft/TypeScriptToLua.github.io/releases{/id}",
      "deployments_url": "https://api.github.com/repos/ben-of-codecraft/TypeScriptToLua.github.io/deployments",
      "created_at": "2023-12-21T17:13:28Z",
      "updated_at": "2023-12-21T17:22:44Z",
      "pushed_at": "2023-12-21T17:22:40Z",
      "git_url": "git://github.com/ben-of-codecraft/TypeScriptToLua.github.io.git",
      "ssh_url": "git@github.com:ben-of-codecraft/TypeScriptToLua.github.io.git",
      "clone_url": "https://github.com/ben-of-codecraft/TypeScriptToLua.github.io.git",
      "svn_url": "https://github.com/ben-of-codecraft/TypeScriptToLua.github.io",
      "homepage": "",
      "size": 4799,
      "stargazers_count": 0,
      "watchers_count": 0,
      "language": "TypeScript",
      "has_issues": false,
      "has_projects": true,
      "has_downloads": true,
      "has_wiki": true,
      "has_pages": false,
      "has_discussions": false,
      "forks_count": 0,
      "mirror_url": null,
      "archived": false,
      "disabled": false,
      "open_issues_count": 0,
      "license": null,
      "allow_forking": true,
      "is_template": false,
      "web_commit_signoff_required": false,
      "topics": [],
      "visibility": "public",
      "forks": 0,
      "open_issues": 0,
      "watchers": 0,
      "default_branch": "source",
      "permissions": {
        "admin": true,
        "maintain": true,
        "push": true,
        "triage": true,
        "pull": true
      },
      "commits": [
        {
          "sha": "b140c90e2f50c91b9f5ee08f0c2f4608343cbe99",
          "committedDate": "2023-12-21T17:22:08Z",
          "message": "Added World of Warcraft WOTLK declarations",
          "messageBody": "",
          "additions": 1,
          "deletions": 0,
          "repository": {
            "owner": {
              "login": "ben-of-codecraft"
            },
            "name": "TypeScriptToLua.github.io"
          }
        }
      ]
    }
  ],
  "pulls": [],
  "issues": [
    {
      "createdAt": "2023-09-15T17:07:33Z",
      "closedAt": "2023-09-20T14:47:08Z",
      "closed": true,
      "author": {
        "login": "ben-of-codecraft"
      },
      "number": 148,
      "title": "Critical Vulnerabilities on dependencies in docker image. ",
      "labels": {
        "totalCount": 1,
        "nodes": [
          {
            "name": "critical-security"
          }
        ]
      },
      "body": "We have detected 4 critical vulnerabilities on this site.  The need remediated as soon as possible. \r\n\r\nYou can use this script to address the issue: \r\nhttps://github.com/rvohealth/appsec-tools/blob/main/security-fixes/wordpress/wp8.2%3Aapache-update.sh\r\n\r\nPlease correct as soon as possible. ",
      "comments": {
        "totalCount": 1
      },
      "reactions": {
        "totalCount": 0
      },
      "assignees": {
        "totalCount": 0
      },
      "repository": {
        "owner": {
          "login": "rvohealth"
        },
        "name": "QuitNow-CorpSite"
      }
    },
    {
      "createdAt": "2023-10-05T02:20:26Z",
      "closedAt": "2023-10-05T04:26:59Z",
      "closed": true,
      "author": {
        "login": "ben-of-codecraft"
      },
      "number": 1,
      "title": "[Bug] Manifest file gets corrupted when handling multiple files updates. ",
      "labels": {
        "totalCount": 1,
        "nodes": [
          {
            "name": "bug"
          }
        ]
      },
      "body": "## Expected Behavior\r\nThe patches and store should have updated correctly\r\n\r\n## Current Behavior\r\nmanifest.json Files gets corrupted and becomes invalid json\r\n\r\n## Steps to Reproduce\r\n\r\n<!-- Add relevant code and/or a live example -->\r\n\r\n1. Click on Install Store - randomly may corrupt file\r\n\r\n2. Click on Install HD patch may randomly corrupt file\r\n\r\n",
      "comments": {
        "totalCount": 0
      },
      "reactions": {
        "totalCount": 0
      },
      "assignees": {
        "totalCount": 0
      },
      "repository": {
        "owner": {
          "login": "araxiaonline"
        },
        "name": "wow-client-patcher"
      }
    },
    {
      "createdAt": "2023-10-05T02:20:53Z",
      "closedAt": null,
      "closed": false,
      "author": {
        "login": "ben-of-codecraft"
      },
      "number": 2,
      "title": "AutoUpdate client",
      "labels": {
        "totalCount": 1,
        "nodes": [
          {
            "name": "enhancement"
          }
        ]
      },
      "body": "The client should be able to be autoupdated if there is a new release .",
      "comments": {
        "totalCount": 0
      },
      "reactions": {
        "totalCount": 0
      },
      "assignees": {
        "totalCount": 0
      },
      "repository": {
        "owner": {
          "login": "araxiaonline"
        },
        "name": "wow-client-patcher"
      }
    },
    {
      "createdAt": "2023-10-05T02:21:58Z",
      "closedAt": null,
      "closed": false,
      "author": {
        "login": "ben-of-codecraft"
      },
      "number": 3,
      "title": "Add Github actions to publish release binaries ",
      "labels": {
        "totalCount": 1,
        "nodes": [
          {
            "name": "enhancement"
          }
        ]
      },
      "body": "On npm package:windows it should complete by creating a new tag and release in GitHub that will kick off any auto-updates to clients. ",
      "comments": {
        "totalCount": 0
      },
      "reactions": {
        "totalCount": 0
      },
      "assignees": {
        "totalCount": 0
      },
      "repository": {
        "owner": {
          "login": "araxiaonline"
        },
        "name": "wow-client-patcher"
      }
    },
    {
      "createdAt": "2023-10-05T02:22:25Z",
      "closedAt": null,
      "closed": false,
      "author": {
        "login": "ben-of-codecraft"
      },
      "number": 4,
      "title": "Add new menu item that will download base client from ChromieCraft ",
      "labels": {
        "totalCount": 1,
        "nodes": [
          {
            "name": "enhancement"
          }
        ]
      },
      "body": "",
      "comments": {
        "totalCount": 0
      },
      "reactions": {
        "totalCount": 0
      },
      "assignees": {
        "totalCount": 0
      },
      "repository": {
        "owner": {
          "login": "araxiaonline"
        },
        "name": "wow-client-patcher"
      }
    },
    {
      "createdAt": "2023-10-05T02:22:52Z",
      "closedAt": null,
      "closed": false,
      "author": {
        "login": "ben-of-codecraft"
      },
      "number": 5,
      "title": "Add additional links to page for instructions and how to submit an issue in the client . ",
      "labels": {
        "totalCount": 1,
        "nodes": [
          {
            "name": "enhancement"
          }
        ]
      },
      "body": "",
      "comments": {
        "totalCount": 0
      },
      "reactions": {
        "totalCount": 0
      },
      "assignees": {
        "totalCount": 0
      },
      "repository": {
        "owner": {
          "login": "araxiaonline"
        },
        "name": "wow-client-patcher"
      }
    },
    {
      "createdAt": "2023-10-05T02:24:07Z",
      "closedAt": null,
      "closed": false,
      "author": {
        "login": "ben-of-codecraft"
      },
      "number": 6,
      "title": "Should have last 3 news updates for previous versions that can be toggled through",
      "labels": {
        "totalCount": 1,
        "nodes": [
          {
            "name": "enhancement"
          }
        ]
      },
      "body": "Currently on the latest news is available, want to have it so you can see last 3 updates as well as latest news on main page. ",
      "comments": {
        "totalCount": 0
      },
      "reactions": {
        "totalCount": 0
      },
      "assignees": {
        "totalCount": 0
      },
      "repository": {
        "owner": {
          "login": "araxiaonline"
        },
        "name": "wow-client-patcher"
      }
    },
    {
      "createdAt": "2023-10-05T02:30:05Z",
      "closedAt": "2023-11-26T22:50:57Z",
      "closed": true,
      "author": {
        "login": "ben-of-codecraft"
      },
      "number": 1,
      "title": "[Feature] - Use Market Pricing that is updated weekly from 4 other private servers. ",
      "labels": {
        "totalCount": 0,
        "nodes": []
      },
      "body": "I will have market_price data in partnership from wow auction site that collects the data.  I will get the script updating weekly on the server this weekend, if you want to use that data. ",
      "comments": {
        "totalCount": 0
      },
      "reactions": {
        "totalCount": 1
      },
      "assignees": {
        "totalCount": 1
      },
      "repository": {
        "owner": {
          "login": "araxiaonline"
        },
        "name": "mod-auctionator"
      }
    },
    {
      "createdAt": "2023-10-05T02:42:00Z",
      "closedAt": "2023-10-05T04:26:59Z",
      "closed": true,
      "author": {
        "login": "ben-of-codecraft"
      },
      "number": 7,
      "title": "Downloader percentage glitches out on batch downloads",
      "labels": {
        "totalCount": 1,
        "nodes": [
          {
            "name": "bug"
          }
        ]
      },
      "body": "## Expected Behavior\r\n\r\nDownloader should state current percentage completed \r\n\r\n## Current Behavior\r\n\r\nDownload percentage is not showing a consistent number all the time\r\n\r\n## Steps to Reproduce\r\n\r\n<!-- Add relevant code and/or a live example -->\r\n\r\n1. Attempt to patch multiple things at once o\r\n\r\n2.\r\n\r\n3.\r\n\r\n4.\r\n",
      "comments": {
        "totalCount": 0
      },
      "reactions": {
        "totalCount": 0
      },
      "assignees": {
        "totalCount": 0
      },
      "repository": {
        "owner": {
          "login": "araxiaonline"
        },
        "name": "wow-client-patcher"
      }
    },
    {
      "createdAt": "2024-01-06T20:32:19Z",
      "closedAt": "2024-01-07T15:44:18Z",
      "closed": true,
      "author": {
        "login": "ben-of-codecraft"
      },
      "number": 18118,
      "title": "ConditionMgr will log errors when CONFIG_EXPANSION is not set to 3 ",
      "labels": {
        "totalCount": 0,
        "nodes": []
      },
      "body": "### Current Behavior\r\n\r\nLogs many errors into logs or console that look like this: \r\n\r\nERROR Skill condition specifies invalid skill value (300), skipped\r\n\r\n### Expected Blizzlike Behavior\r\n\r\nShould ignore conditions that are greater than max skill level for each expansion and not log error.\r\n\r\n### Source\r\n\r\nI would recommend this change\r\n```\r\n--- a/src/server/game/Conditions/ConditionMgr.cpp\r\n+++ b/src/server/game/Conditions/ConditionMgr.cpp\r\n@@ -2004,8 +2004,21 @@ bool ConditionMgr::isConditionTypeValid(Condition* cond)\r\n \r\n         if (cond->ConditionValue2 < 1 || cond->ConditionValue2 > sWorld->GetConfigMaxSkillValue())\r\n         {\r\n-            LOG_ERROR(\"sql.sql\", \"Skill condition specifies invalid skill value ({}), skipped\", cond->ConditionValue2);\r\n-            return false;\r\n+            // Handle cases where the user has set an expansion lower than the existing conditions. \r\n+            bool isError = true; \r\n+            int8 expansion = uint8(sWorld->getIntConfig(CONFIG_EXPANSION)); \r\n+            if(expansion == 1 && cond->ConditionValue2 > 300) {\r\n+                isError = false; \r\n+            }\r\n+\r\n+            if(expansion == 2 && cond->ConditionValue2 > 375) {\r\n+                isError = false; \r\n+            }\r\n+\r\n+            if(isError) {\r\n+                LOG_ERROR(\"sql.sql\", \"Skill condition specifies invalid skill value ({}), skipped\", cond->ConditionValue2);\r\n+                return false;\r\n+            }            \r\n         }\r\n```\r\n\r\n### Steps to reproduce the problem\r\n\r\n1. Set World config expansion lower than 3\r\n2. Start server \r\n\r\n### Extra Notes\r\n\r\n_No response_\r\n\r\n### AC rev. hash/commit\r\n\r\nhttps://github.com/azerothcore/azerothcore-wotlk/commit/859b6594a59ac5c0aecd65be787951dd93380892\r\n\r\n### Operating system\r\n\r\nUbuntu 18\r\n\r\n### Custom changes or Modules\r\n\r\nI have eluna and NPC Bots appled, but validated this is in main branch of azerothcore also ",
      "comments": {
        "totalCount": 2
      },
      "reactions": {
        "totalCount": 0
      },
      "assignees": {
        "totalCount": 0
      },
      "repository": {
        "owner": {
          "login": "azerothcore"
        },
        "name": "azerothcore-wotlk"
      }
    },
    {
      "createdAt": "2024-01-06T23:05:19Z",
      "closedAt": "2024-01-06T23:32:07Z",
      "closed": true,
      "author": {
        "login": "ben-of-codecraft"
      },
      "number": 18119,
      "title": "SQL Update causes conflicts db_import for gameobject",
      "labels": {
        "totalCount": 0,
        "nodes": []
      },
      "body": "### Current Behaviour\r\n\r\nWhen running db import updates for 11_12_07 the file creates gameobject that will conflict with servers that have used sql modules from the azerothcore modules site. \r\n\r\nError message im DBImport logs\r\n\r\n```\r\nUpdating World database...\r\n>> Applying update \"2023_11_12_07.sql\" '96ED637'...\r\nERROR 1062 (23000) at line 40 in file: '/azerothcore/data/sql/updates/db_world/2023_11_12_07.sql': Duplicate entry '2135505' for key 'gameobject.PRIMARY'\r\n```\r\n\r\nThe gameobject table is using an unsigned auto-increment so explicitly setting the guid is not necessary and by removing the set guid when adding the inserts into the gameobject table it will not create conflicts for servers that may have custom content installed in those guids. \r\n\r\n### Expected Blizzlike Behaviour\r\n\r\nThe new spawn points for the location of the gameobjects should not create an import conflict if there are existing guids in the table for that id.  The \r\n\r\n### Source\r\n\r\n_No response_\r\n\r\n### Steps to reproduce the problem\r\n\r\n1. Run sql  - will set up the database to have an existing entry at 2135505\r\n```\r\nINSERT INTO `gameobject` (`guid`, `id`, `map`, `zoneId`, `areaId`, `spawnMask`, `phaseMask`, `position_x`, `position_y`, `position_z`, `orientation`, `rotation0`, `rotation1`, `rotation2`, `rotation3`, `spawntimesecs`, `animprogress`, `state`, `ScriptName`, `VerifiedBuild`)  VALUES\r\n(2135505, 500000, 530, 0, 0, 1, 1, -3550.81, 5709.02, 0.112858, 1.5979, 0, 0, -0.716625, -0.697459, 181, 100, 1, '', 0);\r\n```\r\n2.  run dbimport for file 2023_11_07.sql\r\n3.  View log in DBImport.log\r\n\r\n### Extra Notes\r\n\r\nThis would add the spawn locations of the objects without creating conflicts, allowing the auto-increment to create the primary key.  \r\n```\r\nDELETE FROM `gameobject` WHERE (`id` = 185211);\r\nINSERT INTO `gameobject` (`id`, `map`, `zoneId`, `areaId`, `spawnMask`, `phaseMask`, `position_x`, `position_y`, `position_z`, `orientation`, `rotation0`, `rotation1`, `rotation2`, `rotation3`, `spawntimesecs`, `animprogress`, `state`, `ScriptName`, `VerifiedBuild`) VALUES\r\n(185211, 530, 3519, 3686, 1, 1, -3660.15, 5811.12, 0.02822, 1.98968, 0, 0, 0.838671, 0.544639, 181, 100, 1, '', 0),\r\n(185211, 530, 3519, 3686, 1, 1, -3678.81, 5733.74, -1.00285, 0.733038, 0, 0, 0.358368, 0.93358, 181, 100, 1, '', 0),\r\n(185211, 530, 3519, 3686, 1, 1, -3639.31, 5831.26, 0.07337, -2.44346, 0, 0, 0.939693, -0.34202, 181, 100, 1, '', 0),\r\n(185211, 530, 0, 0, 1, 1, -3579.06, 5817.54, -3.24684, 3.7348, 0, 0, -0.956334, 0.292275, 181, 100, 1, '', 0),\r\n(185211, 530, 0, 0, 1, 1, -3674.35, 5709.55, -0.758734, 1.02344, 0, 0, -0.489679, -0.871903, 181, 100, 1, '', 0);\r\n\r\nDELETE FROM `gameobject` WHERE (`id` = 185210);\r\nINSERT INTO `gameobject` (`id`, `map`, `zoneId`, `areaId`, `spawnMask`, `phaseMask`, `position_x`, `position_y`, `position_z`, `orientation`, `rotation0`, `rotation1`, `rotation2`, `rotation3`, `spawntimesecs`, `animprogress`, `state`, `ScriptName`, `VerifiedBuild`) VALUES\r\n(185210, 530, 3519, 3686, 1, 1, -3568.34, 5772.01, -2.86157, 2.72271, 0, 0, 0.978148, 0.207912, 181, 100, 1, '', 0),\r\n(185210, 530, 3519, 3686, 1, 1, -3560.05, 5771.58, -3.12615, -0.506145, 0, 0, 0.25038, -0.968148, 181, 100, 1, '', 0),\r\n(185210, 530, 0, 0, 1, 1, -3550.81, 5709.02, 0.112858, 1.5979, 0, 0, -0.716625, -0.697459, 181, 100, 1, '', 0),\r\n(185210, 530, 0, 0, 1, 1, -3687.46, 5732.52, -0.673687, 0.680559, 0, 0, -0.333751, -0.942661, 181, 100, 1, '', 0),\r\n(185210, 530, 0, 0, 1, 1, -3620.8, 5760.07, 1.91674, 5.29837, 0, 0, -0.472748, 0.881198, 181, 100, 1, '', 0);\r\n```\r\n\r\n### AC rev. hash/commit\r\n\r\nhttps://github.com/azerothcore/azerothcore-wotlk/commit/1d3d3bebb8c855c760c74a40edf294904428b52c\r\n\r\n### Operating system\r\n\r\nUnbuntu 20\r\n\r\n### Custom changes or Modules\r\n\r\nSQL Script for Town Portals from Azerothcore modules site. ",
      "comments": {
        "totalCount": 7
      },
      "reactions": {
        "totalCount": 0
      },
      "assignees": {
        "totalCount": 0
      },
      "repository": {
        "owner": {
          "login": "azerothcore"
        },
        "name": "azerothcore-wotlk"
      }
    },
    {
      "createdAt": "2024-01-23T16:10:45Z",
      "closedAt": "2024-01-31T14:56:28Z",
      "closed": true,
      "author": {
        "login": "ben-of-codecraft"
      },
      "number": 12,
      "title": "iac-pipeline-project will overwrite .gitignore ",
      "labels": {
        "totalCount": 1,
        "nodes": [
          {
            "name": "bug"
          }
        ]
      },
      "body": "### Description\n\nThe command to bootstrap a project with the new IaC repo in an existing repo wipes the .gitignore and commits it to the local repo. \n\n### Expected behaviour\n\nThe impact on .gitignore should be configurable in .projenrc.ts or via local configuration file.  Recommend providing more flexibility into how this works on existing repos where a .gitignore may be already defined for the repository. \n\n### Steps to reproduce the problem\n\n1.  create new repo \r\n2.  echo \"testfile >> .gitignore\r\n3. git add  . && git commit .\r\n4. npx projen new --from @rvoh-idp/iac-pipeline-project\r\n5. git log .gitignore\r\n\r\nHistory will show project overwriting .gitignore and commit. \n\n### Stack Trace\n\n_No response_\n\n### Node version\n\nv20.6.1\n\n### Other Info\n\nWould like to see an additional command line option to disable this or to check a local config file allowing a repo use to set a different handling strategy for .gitignore files. ",
      "comments": {
        "totalCount": 1
      },
      "reactions": {
        "totalCount": 0
      },
      "assignees": {
        "totalCount": 1
      },
      "repository": {
        "owner": {
          "login": "rvoh-idp"
        },
        "name": "iac-pipeline-project"
      }
    },
    {
      "createdAt": "2024-01-24T15:19:37Z",
      "closedAt": null,
      "closed": false,
      "author": {
        "login": "ben-of-codecraft"
      },
      "number": 14,
      "title": "Feature Request: Add HIPAA deployment policies that can be targeted on creation",
      "labels": {
        "totalCount": 4,
        "nodes": [
          {
            "name": "enhancement"
          },
          {
            "name": "help wanted"
          },
          {
            "name": "security"
          },
          {
            "name": "hipaa"
          }
        ]
      },
      "body": "### Description\n\nCurrently the bootstrap deploys a common OIDC IAM policy, giving teams the ability to develop their own overrides.  For HIPAA accounts we need to have a prescribed deployment roles assigned that are assigned based on use case. \r\n \r\n\n\n### Expected behaviour\n\n\r\nThe following requirements should be met: \r\n1. Role policies should be reviewed and updated. \r\n2.  Least priviledge should be used and avoid should leverage allow list permissions vs deny list go account for future AWS changes. \r\n3. Any changes to policies used on HIPAA accounts must be reviewed by 2 platform engineers and change notices sent to security for awareness\r\n4. The system **MUST** have a way to distribute roles **MUST** that apply permissions based on a designated security risk assigned from our compliance or security engineering teams.  \r\n5. Community requests to change default policies are accepted but must follow the same review approvals. \n\n### Steps to reproduce the problem\n\nN/A\n\n### Stack Trace\n\n_No response_\n\n### Node version\n\n_No response_\n\n### Other Info\n\nWe should likely have a different PR workflow template for these types of requests to ensure approval and visibility of requirements are met. ",
      "comments": {
        "totalCount": 1
      },
      "reactions": {
        "totalCount": 0
      },
      "assignees": {
        "totalCount": 0
      },
      "repository": {
        "owner": {
          "login": "rvoh-idp"
        },
        "name": "iac-pipeline-project"
      }
    },
    {
      "createdAt": "2024-01-25T19:51:20Z",
      "closedAt": "2024-02-06T15:58:06Z",
      "closed": true,
      "author": {
        "login": "ben-of-codecraft"
      },
      "number": 17,
      "title": "feat(GitIgnore) Configire .gitignore from command line on project new",
      "labels": {
        "totalCount": 1,
        "nodes": [
          {
            "name": "enhancement"
          }
        ]
      },
      "body": "### Description\n\nI want to be able to pass behavior on new to our projen bootstrap IaC project to keep my .gitignore information. \n\n### Expected behaviour\n\nnpx project new --from rvoh-idp/iad-pipeline-project --configure gitignore.statetegy=\"merge\" \n\n### Steps to reproduce the problem\n\n_No response_\n\n### Stack Trace\n\n_No response_\n\n### Node version\n\n_No response_\n\n### Other Info\n\n_No response_",
      "comments": {
        "totalCount": 2
      },
      "reactions": {
        "totalCount": 0
      },
      "assignees": {
        "totalCount": 1
      },
      "repository": {
        "owner": {
          "login": "rvoh-idp"
        },
        "name": "iac-pipeline-project"
      }
    },
    {
      "createdAt": "2024-01-30T00:56:35Z",
      "closedAt": null,
      "closed": false,
      "author": {
        "login": "ben-of-codecraft"
      },
      "number": 12,
      "title": "chore: Warnings being throw when compiling",
      "labels": {
        "totalCount": 1,
        "nodes": [
          {
            "name": "bug"
          }
        ]
      },
      "body": "I am seeing the following warnings when compiling.  It do not see any issues with functionality though, so not urgent. \r\n\r\n```bash\r\n28.76 [ 18%] Built target dbimport\r\n28.82 /azerothcore/modules/mod-auctionator/src/Auctionator.cpp:372:74: warning: unused parameter 'config' [-Wunused-parameter]\r\n28.82 float Auctionator::GetQualityMultiplier(AuctionatorPriceMultiplierConfig config, uint32 quality)\r\n28.82                                                                          ^\r\n28.82 1 warning generated.\r\n28.84 [ 18%] Building CXX object src/server/scripts/CMakeFiles/scripts.dir/cmake_pch.hxx.pch\r\n28.88 [ 18%] Building CXX object modules/CMakeFiles/modules.dir/mod-auctionator/src/AuctionatorCommands.cpp.o\r\n28.90 [ 18%] Building CXX object modules/CMakeFiles/modules.dir/mod-auctionator/src/AuctionatorSeller.cpp.o\r\n28.90 [ 19%] Building CXX object modules/CMakeFiles/modules.dir/mod-auctionator/src/AuctionatorEvents.cpp.o\r\n28.92 [ 19%] Building CXX object modules/CMakeFiles/modules.dir/mod-auctionator/src/Auctionator_loader.cpp.o\r\n28.93 [ 19%] Building CXX object modules/CMakeFiles/modules.dir/mod-auctionator/src/AuctionatorScript.cpp.o\r\n28.94 [ 19%] Building CXX object modules/CMakeFiles/modules.dir/mod-autobalance/src/AutoBalance.cpp.o\r\n28.95 [ 19%] Building CXX object modules/CMakeFiles/modules.dir/mod-autobalance/src/AB_loader.cpp.o\r\n28.97 [ 19%] Building CXX object modules/CMakeFiles/modules.dir/mod-better-item-reloading/src/BIR_loader.cpp.o\r\n29.02 /azerothcore/modules/mod-auctionator/src/AuctionatorCommands.cpp:19:21: warning: 'ChatCommand' is deprecated: std::vector<ChatCommand> should be ChatCommandTable! (using namespace Acore::ChatCommands) [-Wdeprecated-declarations]\r\n29.02         std::vector<ChatCommand> GetCommands() const override\r\n29.02                     ^\r\n29.02 /azerothcore/src/server/game/Chat/ChatCommands/ChatCommand.h:277:21: note: 'ChatCommand' has been explicitly marked deprecated here\r\n29.02 using ChatCommand [[deprecated(\"std::vector<ChatCommand> should be ChatCommandTable! (using namespace Acore::ChatCommands)\")]] = Acore::ChatCommands::ChatCommandBuilder;\r\n29.02                     ^\r\n29.02 /azerothcore/modules/mod-auctionator/src/AuctionatorCommands.cpp:21:32: warning: 'ChatCommand' is deprecated: std::vector<ChatCommand> should be ChatCommandTable! (using namespace Acore::ChatCommands) [-Wdeprecated-declarations]\r\n29.02             return std::vector<ChatCommand>\r\n29.02                                ^\r\n29.02 /azerothcore/src/server/game/Chat/ChatCommands/ChatCommand.h:277:21: note: 'ChatCommand' has been explicitly marked deprecated here\r\n29.02 using ChatCommand [[deprecated(\"std::vector<ChatCommand> should be ChatCommandTable! (using namespace Acore::ChatCommands)\")]] = Acore::ChatCommands::ChatCommandBuilder;\r\n29.02                     ^\r\n29.02 /azerothcore/modules/mod-auctionator/src/AuctionatorCommands.cpp:23:16: warning: 'ChatCommandBuilder' is deprecated: you are using the old-style command format; convert this to the new format ({ name, handler (not a pointer!), permission, Console::(Yes/No) }) [-Wdeprecated-declarations]\r\n29.02                {\r\n29.02                ^\r\n29.02 /azerothcore/src/server/game/Chat/ChatCommands/ChatCommand.h:257:9: note: 'ChatCommandBuilder' has been explicitly marked deprecated here\r\n29.02         ChatCommandBuilder(char const* name, uint32 securityLevel, bool console, TypedHandler* handler, char const*)\r\n29.02         ^\r\n29.02 3 warnings generated.\r\n```",
      "comments": {
        "totalCount": 0
      },
      "reactions": {
        "totalCount": 0
      },
      "assignees": {
        "totalCount": 0
      },
      "repository": {
        "owner": {
          "login": "araxiaonline"
        },
        "name": "mod-auctionator"
      }
    },
    {
      "createdAt": "2024-01-30T20:21:25Z",
      "closedAt": null,
      "closed": false,
      "author": {
        "login": "ben-of-codecraft"
      },
      "number": 7,
      "title": "Is this project dead at this point?",
      "labels": {
        "totalCount": 0,
        "nodes": []
      },
      "body": "Let me know, I have sort of carried on where you started. ",
      "comments": {
        "totalCount": 1
      },
      "reactions": {
        "totalCount": 0
      },
      "assignees": {
        "totalCount": 0
      },
      "repository": {
        "owner": {
          "login": "wartoshika"
        },
        "name": "wow-classic-declarations"
      }
    },
    {
      "createdAt": "2024-01-31T16:37:06Z",
      "closedAt": null,
      "closed": false,
      "author": {
        "login": "ben-of-codecraft"
      },
      "number": 55,
      "title": "chore(security): Update XML Parser to newest version",
      "labels": {
        "totalCount": 2,
        "nodes": [
          {
            "name": "dependencies"
          },
          {
            "name": "security"
          }
        ]
      },
      "body": "### Description\n\nUpdate to latest dependencies of XML Parser in APIs\n\n### Expected behaviour\n\nNA\n\n### Steps to reproduce the problem\n\n_No response_\n\n### Stack Trace\n\n_No response_\n\n### Other Info\n\nFrom Dependabot ",
      "comments": {
        "totalCount": 0
      },
      "reactions": {
        "totalCount": 0
      },
      "assignees": {
        "totalCount": 0
      },
      "repository": {
        "owner": {
          "login": "rvohealth"
        },
        "name": "inf-workspaces-automation"
      }
    },
    {
      "createdAt": "2024-01-31T16:39:27Z",
      "closedAt": null,
      "closed": false,
      "author": {
        "login": "ben-of-codecraft"
      },
      "number": 56,
      "title": "refactor(iac): Migrate deployment of development environment from terragrunt system to new IaC Pipeline",
      "labels": {
        "totalCount": 0,
        "nodes": []
      },
      "body": "### Description\r\n\r\nMigrate to the deployment of infrastructure to newest way to deploy infrastructure as code at RVOHEalth\r\n\r\n### Expected behaviour\r\n\r\nGitHub Actions will now use the new actions supplied by shared pipeline.  The pipeline \r\n\r\n### Steps to reproduce the problem\r\n\r\n_No response_\r\n\r\n### Stack Trace\r\n\r\n_No response_\r\n\r\n### Other Info\r\n\r\n_No response_",
      "comments": {
        "totalCount": 0
      },
      "reactions": {
        "totalCount": 0
      },
      "assignees": {
        "totalCount": 0
      },
      "repository": {
        "owner": {
          "login": "rvohealth"
        },
        "name": "inf-workspaces-automation"
      }
    },
    {
      "createdAt": "2024-01-31T17:40:49Z",
      "closedAt": null,
      "closed": false,
      "author": {
        "login": "ben-of-codecraft"
      },
      "number": 57,
      "title": "feat(app deploy): Create GHA build script for the API code in the API's ",
      "labels": {
        "totalCount": 0,
        "nodes": []
      },
      "body": "### Description\n\nCurrently the APIs are manually built and deployed via the Terragrunt process.  This was a fast way to get this live and given the project will now have a longer lifespan, it needs a GHA build job setup as part of the deployment process for APIs. \r\n\r\nThis is necessary for change control tracking and enabling collaboration from other developers with ease. \n\n### Expected behaviour\n\n1. On new PR if an API code change has happened it will build a new artifact \r\n2. If tests are built they will run and reject if change breaks \r\n3. artifacts should be save to npm repository \r\n4. On merge deployment should run via IAC process picking the release artifact for that target. \r\n \n\n### Steps to reproduce the problem\n\nNot a bug\n\n### Stack Trace\n\n_No response_\n\n### Other Info\n\n_No response_",
      "comments": {
        "totalCount": 0
      },
      "reactions": {
        "totalCount": 0
      },
      "assignees": {
        "totalCount": 0
      },
      "repository": {
        "owner": {
          "login": "rvohealth"
        },
        "name": "inf-workspaces-automation"
      }
    },
    {
      "createdAt": "2024-02-04T05:26:02Z",
      "closedAt": "2024-02-04T17:08:00Z",
      "closed": true,
      "author": {
        "login": "ben-of-codecraft"
      },
      "number": 1531,
      "title": "tstl.transpileString API does not work correctly with CompilerOption Inline",
      "labels": {
        "totalCount": 1,
        "nodes": [
          {
            "name": "scope: tooling"
          }
        ]
      },
      "body": "When using transpileString on the following code: \r\n\r\n```typescript\r\nimport * as ts from \"typescript\";\r\nimport * as tstl from \"typescript-to-lua\";\r\n\r\nconst result2 = tstl.transpileString('const mapper: Map<string, number> = new Map();  mapper.set(\"key\", 4); const myset: Set<string> = new Set();', { luaLibImport: tstl.LuaLibImportKind.Inline}); \r\nconsole.log(result2.file?.lua); \r\n```\r\n\r\nThe result is \r\n```lua\r\n--[[ Generated with https://github.com/TypeScriptToLua/TypeScriptToLua ]]\r\n-- Lua Library inline imports\r\nlocal function __TS__New(target, ...)\r\n    local instance = setmetatable({}, target.prototype)\r\n    instance:____constructor(...)\r\n    return instance\r\nend\r\n-- End of Lua Library inline imports\r\nmapper = __TS__New(Map)\r\nmapper:set(\"key\", 4)\r\nmyset = __TS__New(Set)\r\n```\r\n\r\nThe exact same code put into transpileFiles produces the correct inline result as shown below. \r\n```typescript\r\nconst result = tstl.transpileFiles(['./map.test.ts'], { luaLibImport: tstl.LuaLibImportKind.Inline}); \r\n```\r\nWhich produces lua code like this: \r\n```lua\r\n--[[ Generated with https://github.com/TypeScriptToLua/TypeScriptToLua ]]\r\n-- Lua Library inline imports\r\nlocal function __TS__Class(self)\r\n    local c = {prototype = {}}\r\n    c.prototype.__index = c.prototype\r\n    c.prototype.constructor = c\r\n    return c\r\nend\r\n\r\nlocal __TS__Symbol, Symbol\r\ndo\r\n    local symbolMetatable = {__tostring = function(self)\r\n        return (\"Symbol(\" .. (self.description or \"\")) .. \")\"\r\n    end}\r\n    function __TS__Symbol(description)\r\n        return setmetatable({description = description}, symbolMetatable)\r\n    end\r\n    Symbol = {\r\n        asyncDispose = __TS__Symbol(\"Symbol.asyncDispose\"),\r\n        dispose = __TS__Symbol(\"Symbol.dispose\"),\r\n        iterator = __TS__Symbol(\"Symbol.iterator\"),\r\n        hasInstance = __TS__Symbol(\"Symbol.hasInstance\"),\r\n        species = __TS__Symbol(\"Symbol.species\"),\r\n        toStringTag = __TS__Symbol(\"Symbol.toStringTag\")\r\n    }\r\nend\r\n\r\nlocal __TS__Iterator\r\ndo\r\n    local function iteratorGeneratorStep(self)\r\n        local co = self.____coroutine\r\n        local status, value = coroutine.resume(co)\r\n        if not status then\r\n            error(value, 0)\r\n        end\r\n        if coroutine.status(co) == \"dead\" then\r\n            return\r\n        end\r\n        return true, value\r\n    end\r\n    local function iteratorIteratorStep(self)\r\n        local result = self:next()\r\n        if result.done then\r\n            return\r\n        end\r\n        return true, result.value\r\n    end\r\n    local function iteratorStringStep(self, index)\r\n        index = index + 1\r\n        if index > #self then\r\n            return\r\n        end\r\n        return index, string.sub(self, index, index)\r\n    end\r\n    function __TS__Iterator(iterable)\r\n        if type(iterable) == \"string\" then\r\n            return iteratorStringStep, iterable, 0\r\n        elseif iterable.____coroutine ~= nil then\r\n            return iteratorGeneratorStep, iterable\r\n        elseif iterable[Symbol.iterator] then\r\n            local iterator = iterable[Symbol.iterator](iterable)\r\n            return iteratorIteratorStep, iterator\r\n        else\r\n            return ipairs(iterable)\r\n        end\r\n    end\r\nend\r\n\r\nlocal Map\r\ndo\r\n    Map = __TS__Class()\r\n    Map.name = \"Map\"\r\n    function Map.prototype.____constructor(self, entries)\r\n        self[Symbol.toStringTag] = \"Map\"\r\n        self.items = {}\r\n        self.size = 0\r\n        self.nextKey = {}\r\n        self.previousKey = {}\r\n        if entries == nil then\r\n            return\r\n        end\r\n        local iterable = entries\r\n        if iterable[Symbol.iterator] then\r\n            local iterator = iterable[Symbol.iterator](iterable)\r\n            while true do\r\n                local result = iterator:next()\r\n                if result.done then\r\n                    break\r\n                end\r\n                local value = result.value\r\n                self:set(value[1], value[2])\r\n            end\r\n        else\r\n            local array = entries\r\n            for ____, kvp in ipairs(array) do\r\n                self:set(kvp[1], kvp[2])\r\n            end\r\n        end\r\n    end\r\n    function Map.prototype.clear(self)\r\n        self.items = {}\r\n        self.nextKey = {}\r\n        self.previousKey = {}\r\n        self.firstKey = nil\r\n        self.lastKey = nil\r\n        self.size = 0\r\n    end\r\n    function Map.prototype.delete(self, key)\r\n        local contains = self:has(key)\r\n        if contains then\r\n            self.size = self.size - 1\r\n            local next = self.nextKey[key]\r\n            local previous = self.previousKey[key]\r\n            if next ~= nil and previous ~= nil then\r\n                self.nextKey[previous] = next\r\n                self.previousKey[next] = previous\r\n            elseif next ~= nil then\r\n                self.firstKey = next\r\n                self.previousKey[next] = nil\r\n            elseif previous ~= nil then\r\n                self.lastKey = previous\r\n                self.nextKey[previous] = nil\r\n            else\r\n                self.firstKey = nil\r\n                self.lastKey = nil\r\n            end\r\n            self.nextKey[key] = nil\r\n            self.previousKey[key] = nil\r\n        end\r\n        self.items[key] = nil\r\n        return contains\r\n    end\r\n    function Map.prototype.forEach(self, callback)\r\n        for ____, key in __TS__Iterator(self:keys()) do\r\n            callback(nil, self.items[key], key, self)\r\n        end\r\n    end\r\n    function Map.prototype.get(self, key)\r\n        return self.items[key]\r\n    end\r\n    function Map.prototype.has(self, key)\r\n        return self.nextKey[key] ~= nil or self.lastKey == key\r\n    end\r\n    function Map.prototype.set(self, key, value)\r\n        local isNewValue = not self:has(key)\r\n        if isNewValue then\r\n            self.size = self.size + 1\r\n        end\r\n        self.items[key] = value\r\n        if self.firstKey == nil then\r\n            self.firstKey = key\r\n            self.lastKey = key\r\n        elseif isNewValue then\r\n            self.nextKey[self.lastKey] = key\r\n            self.previousKey[key] = self.lastKey\r\n            self.lastKey = key\r\n        end\r\n        return self\r\n    end\r\n    Map.prototype[Symbol.iterator] = function(self)\r\n        return self:entries()\r\n    end\r\n    function Map.prototype.entries(self)\r\n        local items = self.items\r\n        local nextKey = self.nextKey\r\n        local key = self.firstKey\r\n        return {\r\n            [Symbol.iterator] = function(self)\r\n                return self\r\n            end,\r\n            next = function(self)\r\n                local result = {done = not key, value = {key, items[key]}}\r\n                key = nextKey[key]\r\n                return result\r\n            end\r\n        }\r\n    end\r\n    function Map.prototype.keys(self)\r\n        local nextKey = self.nextKey\r\n        local key = self.firstKey\r\n        return {\r\n            [Symbol.iterator] = function(self)\r\n                return self\r\n            end,\r\n            next = function(self)\r\n                local result = {done = not key, value = key}\r\n                key = nextKey[key]\r\n                return result\r\n            end\r\n        }\r\n    end\r\n    function Map.prototype.values(self)\r\n        local items = self.items\r\n        local nextKey = self.nextKey\r\n        local key = self.firstKey\r\n        return {\r\n            [Symbol.iterator] = function(self)\r\n                return self\r\n            end,\r\n            next = function(self)\r\n                local result = {done = not key, value = items[key]}\r\n                key = nextKey[key]\r\n                return result\r\n            end\r\n        }\r\n    end\r\n    Map[Symbol.species] = Map\r\nend\r\n\r\nlocal function __TS__New(target, ...)\r\n    local instance = setmetatable({}, target.prototype)\r\n    instance:____constructor(...)\r\n    return instance\r\nend\r\n\r\nlocal Set\r\ndo\r\n    Set = __TS__Class()\r\n    Set.name = \"Set\"\r\n    function Set.prototype.____constructor(self, values)\r\n        self[Symbol.toStringTag] = \"Set\"\r\n        self.size = 0\r\n        self.nextKey = {}\r\n        self.previousKey = {}\r\n        if values == nil then\r\n            return\r\n        end\r\n        local iterable = values\r\n        if iterable[Symbol.iterator] then\r\n            local iterator = iterable[Symbol.iterator](iterable)\r\n            while true do\r\n                local result = iterator:next()\r\n                if result.done then\r\n                    break\r\n                end\r\n                self:add(result.value)\r\n            end\r\n        else\r\n            local array = values\r\n            for ____, value in ipairs(array) do\r\n                self:add(value)\r\n            end\r\n        end\r\n    end\r\n    function Set.prototype.add(self, value)\r\n        local isNewValue = not self:has(value)\r\n        if isNewValue then\r\n            self.size = self.size + 1\r\n        end\r\n        if self.firstKey == nil then\r\n            self.firstKey = value\r\n            self.lastKey = value\r\n        elseif isNewValue then\r\n            self.nextKey[self.lastKey] = value\r\n            self.previousKey[value] = self.lastKey\r\n            self.lastKey = value\r\n        end\r\n        return self\r\n    end\r\n    function Set.prototype.clear(self)\r\n        self.nextKey = {}\r\n        self.previousKey = {}\r\n        self.firstKey = nil\r\n        self.lastKey = nil\r\n        self.size = 0\r\n    end\r\n    function Set.prototype.delete(self, value)\r\n        local contains = self:has(value)\r\n        if contains then\r\n            self.size = self.size - 1\r\n            local next = self.nextKey[value]\r\n            local previous = self.previousKey[value]\r\n            if next ~= nil and previous ~= nil then\r\n                self.nextKey[previous] = next\r\n                self.previousKey[next] = previous\r\n            elseif next ~= nil then\r\n                self.firstKey = next\r\n                self.previousKey[next] = nil\r\n            elseif previous ~= nil then\r\n                self.lastKey = previous\r\n                self.nextKey[previous] = nil\r\n            else\r\n                self.firstKey = nil\r\n                self.lastKey = nil\r\n            end\r\n            self.nextKey[value] = nil\r\n            self.previousKey[value] = nil\r\n        end\r\n        return contains\r\n    end\r\n    function Set.prototype.forEach(self, callback)\r\n        for ____, key in __TS__Iterator(self:keys()) do\r\n            callback(nil, key, key, self)\r\n        end\r\n    end\r\n    function Set.prototype.has(self, value)\r\n        return self.nextKey[value] ~= nil or self.lastKey == value\r\n    end\r\n    Set.prototype[Symbol.iterator] = function(self)\r\n        return self:values()\r\n    end\r\n    function Set.prototype.entries(self)\r\n        local nextKey = self.nextKey\r\n        local key = self.firstKey\r\n        return {\r\n            [Symbol.iterator] = function(self)\r\n                return self\r\n            end,\r\n            next = function(self)\r\n                local result = {done = not key, value = {key, key}}\r\n                key = nextKey[key]\r\n                return result\r\n            end\r\n        }\r\n    end\r\n    function Set.prototype.keys(self)\r\n        local nextKey = self.nextKey\r\n        local key = self.firstKey\r\n        return {\r\n            [Symbol.iterator] = function(self)\r\n                return self\r\n            end,\r\n            next = function(self)\r\n                local result = {done = not key, value = key}\r\n                key = nextKey[key]\r\n                return result\r\n            end\r\n        }\r\n    end\r\n    function Set.prototype.values(self)\r\n        local nextKey = self.nextKey\r\n        local key = self.firstKey\r\n        return {\r\n            [Symbol.iterator] = function(self)\r\n                return self\r\n            end,\r\n            next = function(self)\r\n                local result = {done = not key, value = key}\r\n                key = nextKey[key]\r\n                return result\r\n            end\r\n        }\r\n    end\r\n    Set[Symbol.species] = Set\r\nend\r\n-- End of Lua Library inline imports\r\nmapper = __TS__New(Map)\r\nmyset = __TS__New(Set)\r\n```\r\n",
      "comments": {
        "totalCount": 1
      },
      "reactions": {
        "totalCount": 0
      },
      "assignees": {
        "totalCount": 0
      },
      "repository": {
        "owner": {
          "login": "TypeScriptToLua"
        },
        "name": "TypeScriptToLua"
      }
    },
    {
      "createdAt": "2024-02-04T16:35:05Z",
      "closedAt": null,
      "closed": false,
      "author": {
        "login": "ben-of-codecraft"
      },
      "number": 2,
      "title": "feat(cli): Add support to update files from later version",
      "labels": {
        "totalCount": 2,
        "nodes": [
          {
            "name": "enhancement"
          },
          {
            "name": "good first issue"
          }
        ]
      },
      "body": "Currently only new installs receive the benefits of changes to tsconfig.json or plugin code there should be an update similar to \r\nohZsh that lets the user know on next run that there is a newer version ask if they would like to update. \r\n\r\n\r\nAdditionally this should support \r\n```bash\r\nnpx ets update \r\n```",
      "comments": {
        "totalCount": 0
      },
      "reactions": {
        "totalCount": 0
      },
      "assignees": {
        "totalCount": 0
      },
      "repository": {
        "owner": {
          "login": "araxiaonline"
        },
        "name": "wow-eluna-ts-module"
      }
    },
    {
      "createdAt": "2024-02-04T16:38:31Z",
      "closedAt": "2024-02-04T16:47:22Z",
      "closed": true,
      "author": {
        "login": "ben-of-codecraft"
      },
      "number": 3,
      "title": "bug(aio-plugin): Not all TypeScript polyfills are being inline for *client.ts ",
      "labels": {
        "totalCount": 1,
        "nodes": [
          {
            "name": "bug"
          }
        ]
      },
      "body": "Confirmed Map and Set Types are not being imported corrctly into final transpiled lua AIO client files. \r\n\r\n```typescript\r\nconst mymap: Map<string, object> = new Map(); \r\nconst myset: Set<string> = new Set()\r\n```\r\n\r\nBoth of the functions will cause errors at runtime in client because they are not inlined like they are supposed to. \r\n\r\nThis issue has been added to TypescriptToLua project [here](https://github.com/TypeScriptToLua/TypeScriptToLua/issues/1531)",
      "comments": {
        "totalCount": 0
      },
      "reactions": {
        "totalCount": 0
      },
      "assignees": {
        "totalCount": 1
      },
      "repository": {
        "owner": {
          "login": "araxiaonline"
        },
        "name": "wow-eluna-ts-module"
      }
    },
    {
      "createdAt": "2024-02-06T21:58:30Z",
      "closedAt": "2024-02-08T16:43:49Z",
      "closed": true,
      "author": {
        "login": "ben-of-codecraft"
      },
      "number": 19,
      "title": "Feature: Create central configuration for managing project generation ",
      "labels": {
        "totalCount": 0,
        "nodes": []
      },
      "body": "### Description\n\nAs a user of the system I want to be able to configure a root level folder and control the initial and future configuration of my iac project.   \r\n\r\nThis original discussion happened as part of this PR: https://github.com/rvoh-idp/iac-pipeline-project/pull/18. it was pointed out that there should be a single place to manage configuration for the project on the file system. \r\n\r\nToday there are 2 config/* and inside of the project in typescript itself. \n\n### Expected behaviour\n\nI want to manage 1 file at the root of my project to configure options on the project generation and future synths. \r\n\r\nThe use case I have is using the iac-pipeline-project in an existing repo where I have an existing .gitignore and files.  I want to customized behavior before the template is run and overwrites my local repo work and commits it to git history. \r\n\r\n\n\n### Steps to reproduce the problem\n\nNA\n\n### Stack Trace\n\nNA\n\n### Node version\n\n_No response_\n\n### Other Info\n\n_No response_",
      "comments": {
        "totalCount": 0
      },
      "reactions": {
        "totalCount": 0
      },
      "assignees": {
        "totalCount": 0
      },
      "repository": {
        "owner": {
          "login": "rvoh-idp"
        },
        "name": "iac-pipeline-project"
      }
    },
    {
      "createdAt": "2024-02-14T16:35:12Z",
      "closedAt": null,
      "closed": false,
      "author": {
        "login": "ben-of-codecraft"
      },
      "number": 59,
      "title": "feat(API):  Add new endpoints to create firewall rules in the domain list rule for Workspaces ",
      "labels": {
        "totalCount": 1,
        "nodes": [
          {
            "name": "enhancement"
          }
        ]
      },
      "body": "### Description\n\nNeed a way to add domains to the firewall rule group and set an expiration time if the domain should only be open for a period of time. \n\n### Expected behaviour\n\n1. API should add a list of domains to the firewall rules assigned to the Workspaces VPC\r\n2. domains that are added with a ttl will be removed within the hour of the ttl expiring. \r\n3. domains without a ttl will remain on the list \r\n4. there should be no duplicate domains added but not throw an error. \n\n### Steps to reproduce the problem\n\nNA\n\n### Stack Trace\n\n_No response_\n\n### Other Info\n\n_No response_",
      "comments": {
        "totalCount": 0
      },
      "reactions": {
        "totalCount": 0
      },
      "assignees": {
        "totalCount": 1
      },
      "repository": {
        "owner": {
          "login": "rvohealth"
        },
        "name": "inf-workspaces-automation"
      }
    }
  ]
}